/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
@import url("https://fonts.googleapis.com/css?family=Dancing+Script|Roboto:300,400,400i,500");
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*
  HEADER SECTION
*/
.header {
  width: 100%;
}

.header .container .header__menu {
  -webkit-box-align: center;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  -moz-justify-content: flex-end;
  justify-content: flex-end;
}

.header .container .header__menu .nav {
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  list-style: none;
  padding-top: 19px;
}

@media (max-width: 480px) {
  .header .container .header__menu .nav {
    -webkit-box-align: center;
    -ms-flex-align: center;
    -moz-align-items: center;
    align-items: center;
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
    -moz-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    display: -webkit-box;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    padding: 0;
    width: 100%;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .header .container .header__menu .nav {
    -webkit-box-align: center;
    -ms-flex-align: center;
    -moz-align-items: center;
    align-items: center;
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
    -moz-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -moz-justify-content: center;
    justify-content: center;
    display: -webkit-box;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    padding-top: 19px;
    padding-left: 0;
    width: 100%;
  }
}

.header .container .header__menu .nav .nav__item {
  margin: 0 20px 0 17px;
}

@media (max-width: 480px) {
  .header .container .header__menu .nav .nav__item {
    margin: 5px 0 5px 0;
  }
}

.header .container .header__menu .nav .nav__item:first-child {
  margin-left: 0;
  margin-right: 16px;
}

@media (max-width: 480px) {
  .header .container .header__menu .nav .nav__item:first-child {
    margin: 0;
  }
}

.header .container .header__menu .nav .nav__item:last-child {
  margin-left: 13px;
  margin-right: 0;
}

@media (max-width: 480px) {
  .header .container .header__menu .nav .nav__item:last-child {
    margin: 0;
  }
}

.header .container .header__menu .nav .nav__item .nav__link {
  font-size: 1.03125rem;
  color: #3a4246;
  font-family: 'Roboto', sans-serif;
  font-size: 16.5px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 300;
  text-decoration: none;
}

.header .container .header__menu .nav .nav__item .nav__link:hover {
  color: #fefefe;
}

.header .container .header__menu .nav .nav__item .nav__link_active {
  color: #fefefe;
  font-weight: 500;
}

/*
  END HEADER SECTION
*/
/*
  TITLE-SECTION
*/
.title-section {
  display: block;
  margin-bottom: 98px;
  padding-top: 36px;
  text-align: center;
}

@media (max-width: 480px) {
  .title-section {
    padding-top: 0;
  }
}

.title-section .container h1 {
  font-size: 5rem;
  color: #fefefe;
  font-family: 'Dancing Script', cursive;
  font-size: 80px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 500;
  margin: 0 0 10px 0;
}

.title-section .container p {
  font-size: 2.125rem;
  color: #fefefe;
  font-family: 'Roboto', sans-serif;
  font-size: 34px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 500;
  margin: 0 0 14px 0;
}

.title-section .container .btn {
  font-size: 1.5rem;
  background: #003333;
  color: #fefefe;
  font-family: 'Roboto', sans-serif;
  font-size: 24px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 300;
  margin-top: 22px;
  padding: 12px 22px;
}

/*
  END TITLE-SECTION
*/
.article {
  display: block;
  padding-top: 69px;
  text-align: center;
}

@media (max-width: 480px) {
  .article {
    padding-top: 0;
  }
}

.article .container h3 {
  font-size: 2.03125rem;
  color: #3a4246;
  font-family: 'Roboto', sans-serif;
  font-size: 32.5px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  margin: 0 0 21px 16px;
}

.article .container p {
  font-size: 1.1875rem;
  color: #3a4246;
  font-family: 'Roboto', sans-serif;
  font-size: 19px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  margin: 0 0 62px 25px;
}

/*
  INFO-SECTION
*/
.info-section .container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
      flex-flow: row wrap;
}

.info-section .container .island {
  background: url("../pic/island.png") no-repeat;
  background-size: cover;
  height: 0;
  padding-top: 23.25%;
}

@media (max-width: 480px) {
  .info-section .container .island {
    padding-top: 34.92%;
    background-size: contain;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .island {
    padding-top: 23.3%;
    background-size: contain;
  }
}

.info-section .container .dish {
  padding-top: 23px;
  height: 23.25%;
}

@media (max-width: 480px) {
  .info-section .container .dish {
    padding-top: 10px;
    height: 34.96%;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .dish {
    height: 23.3%;
    padding-top: 3%px;
  }
}

.info-section .container .dish .img-dish {
  margin-bottom: 9px;
  width: 18%;
}

@media (max-width: 480px) {
  .info-section .container .dish .img-dish {
    margin: 0;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .info-section .container .dish .img-dish {
    margin: 0;
  }
}

.info-section .container .dish p {
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  font-size: 1rem;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  margin: 0 0 3px 0;
}

@media (max-width: 480px) {
  .info-section .container .dish p {
    margin: 0;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .info-section .container .dish p {
    margin: 0;
  }
}

.info-section .container .dish span {
  font-size: 1.1875rem;
  font-size: 19px;
}

.info-section .container .hotel {
  background: url("../pic/hotel.png") no-repeat;
  background-size: cover;
  height: 0;
  padding-top: 23.25%;
}

@media (max-width: 480px) {
  .info-section .container .hotel {
    padding-top: 34.96%;
    background-size: contain;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .hotel {
    padding-top: 23.2%;
    background-size: cover;
  }
}

.info-section .container .monument {
  padding-top: 33px;
  height: 23.25%;
}

@media (max-width: 480px) {
  .info-section .container .monument {
    padding-top: 10px;
    height: 34.96%;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .monument {
    height: 23.3%;
    padding-top: 3%px;
  }
}

.info-section .container .monument .img-monument {
  margin-bottom: 9px;
  width: 12%;
}

@media (max-width: 480px) {
  .info-section .container .monument .img-monument {
    margin: 0;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .info-section .container .monument .img-monument {
    margin: 0;
  }
}

.info-section .container .monument p {
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  font-size: 1rem;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  margin: 0 0 3px 0;
}

@media (max-width: 480px) {
  .info-section .container .monument p {
    margin: 0;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .info-section .container .monument p {
    margin: 0;
  }
}

.info-section .container .monument span {
  font-size: 1.1875rem;
  font-size: 19px;
}

.info-section .container .mountain1 {
  background: url("../pic/mountain1-.png") no-repeat;
  background-size: cover;
  height: 0;
  padding-top: 23.4%;
}

@media (max-width: 480px) {
  .info-section .container .mountain1 {
    padding-top: 35%;
    background-size: contain;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .mountain1 {
    padding-top: 23.45%;
    background-size: cover;
  }
}

.info-section .container .city1 {
  background: url("../pic/city1-.png") no-repeat;
  background-size: contain;
  height: 0;
  padding-top: 23.25%;
}

@media (max-width: 480px) {
  .info-section .container .city1 {
    padding-top: 34.96%;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .city1 {
    padding-top: 23.45%;
    background-size: cover;
  }
}

.info-section .container .mountain {
  background: url("../pic/mountain.png") no-repeat;
  background-size: cover;
  height: 0;
  padding-top: 23.31%;
}

@media (max-width: 480px) {
  .info-section .container .mountain {
    padding-top: 34.96%;
    background-size: contain;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .mountain {
    padding-top: 23.4%;
    background-size: cover;
  }
}

.info-section .container .city {
  background: url("../pic/city.png") no-repeat;
  background-size: cover;
  height: 0;
  padding-top: 23.25%;
}

@media (max-width: 480px) {
  .info-section .container .city {
    padding-top: 34.96%;
    background-size: contain;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .info-section .container .city {
    padding-top: 23.3%;
    background-size: cover;
  }
}

.info-section .container .flower {
  padding-top: 33px;
  height: 23.25%;
}

@media (max-width: 480px) {
  .info-section .container .flower {
    padding-top: 20px;
    height: 34.96%;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .flower {
    height: 23.3%;
    padding-top: 20px;
  }
}

.info-section .container .flower .img-flower {
  margin-bottom: 11px;
  margin-left: 16px;
  width: 13%;
}

@media (max-width: 480px) {
  .info-section .container .flower .img-flower {
    margin: 0;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .info-section .container .flower .img-flower {
    margin-left: 0;
  }
}

.info-section .container .flower p {
  font-size: 1rem;
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  margin: 0px 0 3px 18px;
}

@media (max-width: 480px) {
  .info-section .container .flower p {
    margin: 0;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .info-section .container .flower p {
    margin: 0px 0 3px 0;
  }
}

.info-section .container .flower span {
  font-size: 1.1875rem;
  font-size: 19px;
}

@media (max-width: 548px) {
  .info-section .container .span-two {
    color: #3a4246;
    -webkit-box-flex: 1;
        -ms-flex: 1 0 auto;
            flex: 1 0 auto;
    text-align: center;
    width: 50%;
  }
}

@media (min-width: 549px) {
  .info-section .container .span-three {
    color: #3a4246;
    -webkit-box-flex: 1;
        -ms-flex: 1 0 auto;
            flex: 1 0 auto;
    text-align: center;
    width: 33.3333333333%;
  }
}

/*
  END INFO-SECTION
*/
/*
  FOOTER SECTION
*/
.footer {
  -moz-filter: grayscale(100%);
  -ms-filter: grayscale(100%);
  -o-filter: grayscale(100%);
  -webkit-filter: grayscale(100%);
  background: url("../img/bg4-copy1-.png") 50% 89% no-repeat;
  -webkit-filter: gray;
          filter: gray;
  /* IE 6-9 */
  filter: grayscale(100%);
  text-align: center;
  width: 100%;
}

.footer .container p {
  font-size: 1.5rem;
  color: #fefefe;
  font-family: 'Roboto', sans-serif;
  font-size: 24px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  margin: 49px 0px 0px 22px;
}

.footer .container .footer__menu {
  -webkit-box-align: center;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
}

.footer .container .footer__menu .nav {
  font-size: 1.125rem;
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  color: #fefefe;
  font-family: 'Roboto', sans-serif;
  font-size: 18px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 500;
  list-style: none;
  margin: 0 0 30px 0;
  padding-left: 0;
  padding-top: 22px;
}

.footer .container .footer__menu .nav .nav__item {
  margin: 0 5px 0 5px;
}

.footer .container .footer__menu .nav .nav__item:first-child {
  margin-left: 0;
  margin-right: 8px;
}

.footer .container .footer__menu .nav .nav__item:last-child {
  margin-left: 10px;
  margin-right: 0;
}

.footer .container .footer__menu .nav .nav__item .nav__link {
  font-size: 1.125rem;
  color: #fefefe;
  font-family: 'Roboto', sans-serif;
  font-size: 18px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 500;
  text-decoration: none;
}

.footer .container .footer__menu .nav .nav__item .nav__link:hover {
  color: #0a0a0a;
}

.footer .container .footer__menu .nav .nav__item .nav__link_no-active {
  cursor: default;
}

.footer .container .footer__menu .nav .nav__item .nav__link_no-active:hover {
  color: #fefefe;
}

/*
  END FOOTER SECTION
*/
/*
  CAROUSEL-SECTION
*/
.carousel-section {
  margin-bottom: 26px;
  /*
  	Theme controls how everything looks in Gallery CSS.
  */
}

.carousel-section .gallery .control-operator:nth-of-type(1):target ~ .controls .control-button:nth-of-type(1),
.carousel-section .gallery .control-operator:nth-of-type(2):target ~ .controls .control-button:nth-of-type(2),
.carousel-section .gallery .control-operator:nth-of-type(3):target ~ .controls .control-button:nth-of-type(3),
.carousel-section .gallery .control-operator:nth-of-type(4):target ~ .controls .control-button:nth-of-type(4),
.carousel-section .gallery .control-operator:nth-of-type(5):target ~ .controls .control-button:nth-of-type(5) {
  background: url(../img/Ellipse-2-copy-2.png) no-repeat;
  background-position: 50% 10%;
}

.carousel-section .gallery .item:first-of-type {
  opacity: 1;
  pointer-events: auto;
  position: static;
}

.carousel-section .gallery .item {
  -o-transition: opacity .5s;
  -webkit-transition: opacity .5s;
  height: 100%;
  left: 0;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 0;
  transition: opacity .5s;
  width: 100%;
}

.carousel-section .gallery .control-operator {
  display: none;
}

.carousel-section .gallery .control-operator:target ~ .item {
  -webkit-animation: none;
  animation: none;
  opacity: 0;
  pointer-events: none;
}

.carousel-section .gallery .control-operator:target ~ .controls .control-button {
  -webkit-animation: none;
  animation: none;
}

@-webkit-keyframes controlAnimation-2 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  14.3%, 50% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  64.3%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@keyframes controlAnimation-2 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  14.3%, 50% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  64.3%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@-webkit-keyframes galleryAnimation-2 {
  0% {
    opacity: 0;
  }
  14.3%, 50% {
    opacity: 1;
  }
  64.3%, 100% {
    opacity: 0;
  }
}

@keyframes galleryAnimation-2 {
  0% {
    opacity: 0;
  }
  14.3%, 50% {
    opacity: 1;
  }
  64.3%, 100% {
    opacity: 0;
  }
}

.carousel-section .gallery .control-operator:nth-of-type(1):target ~ .item:nth-of-type(1) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(2):target ~ .item:nth-of-type(2) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .items-2.autoplay .control-button {
  -webkit-animation: controlAnimation-2 14s infinite;
  animation: controlAnimation-2 14s infinite;
}

.carousel-section .items-2.autoplay .item {
  -webkit-animation: galleryAnimation-2 14s infinite;
  animation: galleryAnimation-2 14s infinite;
}

.carousel-section .items-2 .control-button:nth-of-type(1),
.carousel-section .items-2 .item:nth-of-type(1) {
  -webkit-animation-delay: -2s;
  animation-delay: -2s;
}

.carousel-section .items-2 .control-button:nth-of-type(2),
.carousel-section .items-2 .item:nth-of-type(2) {
  -webkit-animation-delay: 5s;
  animation-delay: 5s;
}

@-webkit-keyframes controlAnimation-3 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  9.5%, 33.3% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  42.9%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@keyframes controlAnimation-3 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  9.5%, 33.3% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  42.9%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@-webkit-keyframes galleryAnimation-3 {
  0% {
    opacity: 0;
  }
  9.5%, 33.3% {
    opacity: 1;
  }
  42.9%, 100% {
    opacity: 0;
  }
}

@keyframes galleryAnimation-3 {
  0% {
    opacity: 0;
  }
  9.5%, 33.3% {
    opacity: 1;
  }
  42.9%, 100% {
    opacity: 0;
  }
}

.carousel-section .gallery .control-operator:nth-of-type(1):target ~ .item:nth-of-type(1) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(2):target ~ .item:nth-of-type(2) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(3):target ~ .item:nth-of-type(3) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .items-3.autoplay .control-button {
  -webkit-animation: controlAnimation-3 21s infinite;
  animation: controlAnimation-3 21s infinite;
}

.carousel-section .items-3.autoplay .item {
  -webkit-animation: galleryAnimation-3 21s infinite;
  animation: galleryAnimation-3 21s infinite;
}

.carousel-section .items-3 .control-button:nth-of-type(1),
.carousel-section .items-3 .item:nth-of-type(1) {
  -webkit-animation-delay: -2s;
  animation-delay: -2s;
}

.carousel-section .items-3 .control-button:nth-of-type(2),
.carousel-section .items-3 .item:nth-of-type(2) {
  -webkit-animation-delay: 5s;
  animation-delay: 5s;
}

.carousel-section .items-3 .control-button:nth-of-type(3),
.carousel-section .items-3 .item:nth-of-type(3) {
  -webkit-animation-delay: 12s;
  animation-delay: 12s;
}

@-webkit-keyframes controlAnimation-4 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  7.1%, 25% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  32.1%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@keyframes controlAnimation-4 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  7.1%, 25% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  32.1%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@-webkit-keyframes galleryAnimation-4 {
  0% {
    opacity: 0;
  }
  7.1%, 25% {
    opacity: 1;
  }
  32.1%, 100% {
    opacity: 0;
  }
}

@keyframes galleryAnimation-4 {
  0% {
    opacity: 0;
  }
  7.1%, 25% {
    opacity: 1;
  }
  32.1%, 100% {
    opacity: 0;
  }
}

.carousel-section .gallery .control-operator:nth-of-type(1):target ~ .item:nth-of-type(1) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(2):target ~ .item:nth-of-type(2) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(3):target ~ .item:nth-of-type(3) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(4):target ~ .item:nth-of-type(4) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .items-4.autoplay .control-button {
  -webkit-animation: controlAnimation-4 28s infinite;
  animation: controlAnimation-4 28s infinite;
}

.carousel-section .items-4.autoplay .item {
  -webkit-animation: galleryAnimation-4 28s infinite;
  animation: galleryAnimation-4 28s infinite;
}

.carousel-section .items-4 .control-button:nth-of-type(1),
.carousel-section .items-4 .item:nth-of-type(1) {
  -webkit-animation-delay: -2s;
  animation-delay: -2s;
}

.carousel-section .items-4 .control-button:nth-of-type(2),
.carousel-section .items-4 .item:nth-of-type(2) {
  -webkit-animation-delay: 5s;
  animation-delay: 5s;
}

.carousel-section .items-4 .control-button:nth-of-type(3),
.carousel-section .items-4 .item:nth-of-type(3) {
  -webkit-animation-delay: 12s;
  animation-delay: 12s;
}

.carousel-section .items-4 .control-button:nth-of-type(4),
.carousel-section .items-4 .item:nth-of-type(4) {
  -webkit-animation-delay: 19s;
  animation-delay: 19s;
}

@-webkit-keyframes controlAnimation-5 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  5.7%, 20% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  25.7%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@keyframes controlAnimation-5 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  5.7%, 20% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  25.7%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@-webkit-keyframes galleryAnimation-5 {
  0% {
    opacity: 0;
  }
  5.7%, 20% {
    opacity: 1;
  }
  25.7%, 100% {
    opacity: 0;
  }
}

@keyframes galleryAnimation-5 {
  0% {
    opacity: 0;
  }
  5.7%, 20% {
    opacity: 1;
  }
  25.7%, 100% {
    opacity: 0;
  }
}

.carousel-section .gallery .control-operator:nth-of-type(1):target ~ .item:nth-of-type(1) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(2):target ~ .item:nth-of-type(2) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(3):target ~ .item:nth-of-type(3) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(4):target ~ .item:nth-of-type(4) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(5):target ~ .item:nth-of-type(5) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .items-5.autoplay .control-button {
  -webkit-animation: controlAnimation-5 35s infinite;
  animation: controlAnimation-5 35s infinite;
}

.carousel-section .items-5.autoplay .item {
  -webkit-animation: galleryAnimation-5 35s infinite;
  animation: galleryAnimation-5 35s infinite;
}

.carousel-section .items-5 .control-button:nth-of-type(1),
.carousel-section .items-5 .item:nth-of-type(1) {
  -webkit-animation-delay: -2s;
  animation-delay: -2s;
}

.carousel-section .items-5 .control-button:nth-of-type(2),
.carousel-section .items-5 .item:nth-of-type(2) {
  -webkit-animation-delay: 5s;
  animation-delay: 5s;
}

.carousel-section .items-5 .control-button:nth-of-type(3),
.carousel-section .items-5 .item:nth-of-type(3) {
  -webkit-animation-delay: 12s;
  animation-delay: 12s;
}

.carousel-section .items-5 .control-button:nth-of-type(4),
.carousel-section .items-5 .item:nth-of-type(4) {
  -webkit-animation-delay: 19s;
  animation-delay: 19s;
}

.carousel-section .items-5 .control-button:nth-of-type(5),
.carousel-section .items-5 .item:nth-of-type(5) {
  -webkit-animation-delay: 26s;
  animation-delay: 26s;
}

.carousel-section .gallery .control-button {
  color: #ccc;
  color: rgba(255, 255, 255, 0.4);
}

.carousel-section .gallery .control-button:hover {
  background: url(../img/Ellipse-2-copy-2.png) no-repeat;
  background-position: 50% 10%;
}

.carousel-section .gallery {
  position: relative;
}

.carousel-section .gallery .item {
  height: auto;
  overflow: hidden;
  padding-top: 48px;
  text-align: center;
}

.carousel-section .gallery .item .quote {
  color: #3a4246;
  font-family: 'Roboto', sans-serif;
  font-size: 17px;
  font-size: 1.0625rem;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  margin: 19px 93px 0 81px;
}

.carousel-section .gallery .item .author {
  color: #1599a7;
  font-family: 'Roboto', sans-serif;
  font-size: 15px;
  font-size: 0.9375rem;
  font-stretch: normal;
  font-style: italic;
  font-weight: 300;
  margin: 10px 0 32px 0;
}

.carousel-section .gallery .controls {
  bottom: 0;
  height: 20px;
  position: absolute;
  text-align: center;
  width: 100%;
}

.carousel-section .gallery .control-button {
  background: url("../img/Ellipse-2.png") no-repeat;
  display: inline-block;
  font-size: 3em;
  text-align: center;
  text-decoration: none;
}

.carousel-section figure {
  margin: 0;
}

/*
  END CAROUSEL-SECTION
*/
html {
  box-sizing: border-box;
  font-size: 100%;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  margin: 0;
  padding: 0;
  background: #fefefe url("../img/background.png") no-repeat;
  background-position: top;
  font-family: "Roboto", Helvetica, Arial, sans-serif;
  font-weight: normal;
  line-height: 1;
  color: #0a0a0a;
}

img {
  display: inline-block;
  vertical-align: middle;
  max-width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;
}

textarea {
  height: auto;
  min-height: 50px;
  border-radius: 0;
}

select {
  width: 100%;
  border-radius: 0;
}

.map_canvas img,
.map_canvas embed,
.map_canvas object,
.mqa-display img,
.mqa-display embed,
.mqa-display object {
  max-width: none !important;
}

button {
  padding: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: 0;
  border-radius: 0;
  background: transparent;
  line-height: 1;
}

.is-visible {
  display: block !important;
}

.is-hidden {
  display: none !important;
}

.container {
  margin: 0 auto;
  max-width: 824px;
  overflow: hidden;
}

@media (max-width: 480px) {
  .container {
    max-width: 400px;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .container {
    max-width: 748px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
