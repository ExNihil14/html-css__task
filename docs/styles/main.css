@charset "UTF-8";
/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
@import url("https://fonts.googleapis.com/css?family=Dancing+Script|Roboto:300,400,400i,500");
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*
  HEADER SECTION
*/
.header {
  width: 100%;
}

.header .menu {
  -webkit-box-align: center;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  -moz-justify-content: flex-end;
  justify-content: flex-end;
}

.header .menu .nav {
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  list-style: none;
  padding-top: 19px;
}

@media (max-width: 480px) {
  .header .menu .nav {
    -webkit-box-align: center;
    -ms-flex-align: center;
    -moz-align-items: center;
    align-items: center;
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
    -moz-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    display: -webkit-box;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    padding: 0;
    width: 100%;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .header .menu .nav {
    -webkit-box-align: center;
    -ms-flex-align: center;
    -moz-align-items: center;
    align-items: center;
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
    -moz-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -moz-justify-content: center;
    justify-content: center;
    display: -webkit-box;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    padding-top: 19px;
    padding-left: 0;
    width: 100%;
  }
}

.header .menu .nav .item {
  margin: 0 20px 0 17px;
}

@media (max-width: 480px) {
  .header .menu .nav .item {
    margin: 5px 0 5px 0;
  }
}

.header .menu .nav .item:first-child {
  margin-left: 0;
  margin-right: 16px;
}

@media (max-width: 480px) {
  .header .menu .nav .item:first-child {
    margin: 0;
  }
}

.header .menu .nav .item:last-child {
  margin-left: 13px;
  margin-right: 0;
}

@media (max-width: 480px) {
  .header .menu .nav .item:last-child {
    margin: 0;
  }
}

.header .menu .nav .item .link {
  font-size: 1.03125rem;
  color: #3a4246;
  font-family: 'Roboto', sans-serif;
  font-size: 16.5px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 300;
  text-decoration: none;
}

.header .menu .nav .item .link:hover {
  color: #fefefe;
}

.header .menu .nav .item .link-active {
  color: #fefefe;
  font-weight: 500;
}

/*
  END HEADER SECTION
*/
/*
  TITLE-SECTION
*/
.title-section {
  display: block;
  margin-bottom: 98px;
  padding-top: 36px;
  text-align: center;
}

@media (max-width: 480px) {
  .title-section {
    padding-top: 0;
  }
}

.title-section h1 {
  font-size: 5rem;
  color: #fefefe;
  font-family: 'Dancing Script', cursive;
  font-size: 80px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 500;
  margin: 0 0 10px 0;
}

.title-section p {
  font-size: 2.125rem;
  color: #fefefe;
  font-family: 'Roboto', sans-serif;
  font-size: 34px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 500;
  margin: 0 0 14px 0;
}

.title-section .btn {
  font-size: 1.5rem;
  background: #003333;
  color: #fefefe;
  font-family: 'Roboto', sans-serif;
  font-size: 24px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 300;
  margin-top: 22px;
  padding: 12px 22px;
}

/*
  END TITLE-SECTION
*/
/*
  ARTICLE-SECTION
*/
.article {
  display: block;
  padding-top: 69px;
  text-align: center;
}

@media (max-width: 480px) {
  .article {
    padding-top: 0;
  }
}

.article h3 {
  font-size: 2.03125rem;
  color: #3a4246;
  font-family: 'Roboto', sans-serif;
  font-size: 32.5px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  margin: 0 0 21px 16px;
}

.article p {
  font-size: 1.1875rem;
  color: #3a4246;
  font-family: 'Roboto', sans-serif;
  font-size: 19px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  margin: 0 0 62px 25px;
}

/*
  END ARTICLE-SECTION
*/
/*
  INFO-SECTION
*/
.info-section .container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
      flex-flow: row wrap;
}

.info-section .container .island-bg {
  background: url("../pic/island-bg.png") no-repeat;
  background-size: cover;
  height: 192px;
}

@media (max-width: 480px) {
  .info-section .container .island-bg {
    height: 141px;
    background-size: cover;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .island-bg {
    height: 176px;
    background-size: cover;
  }
}

.info-section .container .dish {
  padding-top: 23px;
}

@media (max-width: 480px) {
  .info-section .container .dish {
    padding: 10px 5px 0 5px;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .dish {
    padding-top: 3%px;
  }
}

.info-section .container .dish .img-dish {
  margin-bottom: 9px;
  width: 18%;
}

@media (max-width: 480px) {
  .info-section .container .dish .img-dish {
    margin: 0;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .dish .img-dish {
    margin: 0;
  }
}

.info-section .container .dish p {
  font-size: 1rem;
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  margin: 0 0 3px 0;
}

@media (max-width: 480px) {
  .info-section .container .dish p {
    margin: 0;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .dish p {
    margin: 0;
  }
}

.info-section .container .dish span {
  font-size: 1.1875rem;
  font-size: 19px;
}

.info-section .container .hotel-bg {
  background: url("../pic/hotel-bg.png") no-repeat;
  background-size: cover;
  height: 192px;
}

@media (max-width: 480px) {
  .info-section .container .hotel-bg {
    height: 141px;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .hotel-bg {
    height: 176px;
    background-size: cover;
  }
}

.info-section .container .monument {
  padding-top: 33px;
}

@media (max-width: 480px) {
  .info-section .container .monument {
    padding: 10px 5px 0 5px;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .monument {
    padding-top: 3%px;
  }
}

.info-section .container .monument .img-monument {
  margin-bottom: 9px;
  width: 12%;
}

@media (max-width: 480px) {
  .info-section .container .monument .img-monument {
    margin: 0;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .info-section .container .monument .img-monument {
    margin: 0;
  }
}

.info-section .container .monument p {
  font-size: 1rem;
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  margin: 0 0 3px 0;
}

@media (max-width: 480px) {
  .info-section .container .monument p {
    margin: 0;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .info-section .container .monument p {
    margin: 0;
  }
}

.info-section .container .monument span {
  font-size: 1.1875rem;
  font-size: 19px;
}

.info-section .container .mountain-bg {
  background: url("../pic/mountain-bg.png") no-repeat;
  background-size: cover;
  height: 192px;
}

@media (max-width: 480px) {
  .info-section .container .mountain-bg {
    height: 141px;
    background-size: cover;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .mountain-bg {
    height: 176px;
    background-size: cover;
  }
}

.info-section .container .city-bg {
  background: url("../pic/city-bg.png") no-repeat;
  background-size: cover;
  height: 192px;
}

@media (max-width: 480px) {
  .info-section .container .city-bg {
    height: 141px;
    background-size: cover;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .city-bg {
    height: 176px;
    background-size: cover;
  }
}

.info-section .container .yacht-bg {
  background: url("../pic/yacht-bg.png") no-repeat;
  background-size: cover;
  height: 192px;
  padding-top: 23.31%;
}

@media (max-width: 480px) {
  .info-section .container .yacht-bg {
    height: 141px;
    background-size: cover;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .yacht-bg {
    height: 176px;
    background-size: cover;
  }
}

.info-section .container .coast-bg {
  background: url("../pic/coast-bg.png") no-repeat;
  background-size: cover;
  height: 192px;
  padding-top: 23.25%;
}

@media (max-width: 480px) {
  .info-section .container .coast-bg {
    height: 141px;
    background-size: cover;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .coast-bg {
    height: 176px;
    background-size: cover;
  }
}

.info-section .container .flower {
  padding-top: 33px;
  height: 23.25%;
}

@media (max-width: 480px) {
  .info-section .container .flower {
    padding-top: 20px;
  }
}

@media (min-width: 549px) and (max-width: 768px) {
  .info-section .container .flower {
    padding-top: 20px;
  }
}

.info-section .container .flower .img-flower {
  margin-bottom: 11px;
  margin-left: 16px;
  width: 13%;
}

@media (max-width: 480px) {
  .info-section .container .flower .img-flower {
    margin: 0;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .info-section .container .flower .img-flower {
    margin-left: 0;
  }
}

.info-section .container .flower p {
  font-size: 1rem;
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  margin: 0px 0 3px 18px;
}

@media (max-width: 480px) {
  .info-section .container .flower p {
    margin: 0;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .info-section .container .flower p {
    margin: 0px 0 3px 0;
  }
}

.info-section .container .flower span {
  font-size: 1.1875rem;
  font-size: 19px;
}

@media (max-width: 548px) {
  .info-section .container .span-two {
    color: #3a4246;
    -webkit-box-flex: 1;
        -ms-flex: 1 0 auto;
            flex: 1 0 auto;
    text-align: center;
    width: 50%;
  }
}

@media (min-width: 549px) {
  .info-section .container .span-three {
    color: #3a4246;
    -webkit-box-flex: 1;
        -ms-flex: 1 0 auto;
            flex: 1 0 auto;
    text-align: center;
    width: 33.3333333333%;
  }
}

/*
  END INFO-SECTION
*/
/*
  FOOTER SECTION
*/
.footer {
  -moz-filter: grayscale(100%);
  -ms-filter: grayscale(100%);
  -o-filter: grayscale(100%);
  -webkit-filter: grayscale(100%);
  background: url("../img/background-2.png") 50% 89% no-repeat;
  -webkit-filter: gray;
          filter: gray;
  /* IE 6-9 */
  filter: grayscale(100%);
  text-align: center;
  width: 100%;
}

.footer p {
  font-size: 1.5rem;
  color: #fefefe;
  font-family: 'Roboto', sans-serif;
  font-size: 24px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  margin: 49px 0px 0px 22px;
}

.footer .menu {
  -webkit-box-align: center;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
}

.footer .menu .nav {
  font-size: 1.125rem;
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  color: #fefefe;
  font-family: 'Roboto', sans-serif;
  font-size: 18px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 500;
  list-style: none;
  margin: 0 0 30px 0;
  padding-left: 0;
  padding-top: 22px;
}

.footer .menu .nav .item {
  margin: 0 5px 0 5px;
}

.footer .menu .nav .item:first-child {
  margin-left: 0;
  margin-right: 8px;
}

.footer .menu .nav .item:last-child {
  margin-left: 10px;
  margin-right: 0;
}

.footer .menu .nav .item .link {
  font-size: 1.125rem;
  color: #fefefe;
  font-family: 'Roboto', sans-serif;
  font-size: 18px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 500;
  text-decoration: none;
}

.footer .menu .nav .item .link:hover {
  color: #0a0a0a;
}

.footer .menu .nav .item .link-no-active {
  cursor: default;
}

.footer .menu .nav .item .link-no-active:hover {
  color: #fefefe;
}

/*
  END FOOTER SECTION
*/
/*
  CAROUSEL-SECTION
*/
.carousel-section {
  margin-bottom: 26px;
  /*
  	Theme controls how everything looks in Gallery CSS.
  */
}

.carousel-section .gallery .control-operator:nth-of-type(1):target ~ .controls .control-button:nth-of-type(1),
.carousel-section .gallery .control-operator:nth-of-type(2):target ~ .controls .control-button:nth-of-type(2),
.carousel-section .gallery .control-operator:nth-of-type(3):target ~ .controls .control-button:nth-of-type(3),
.carousel-section .gallery .control-operator:nth-of-type(4):target ~ .controls .control-button:nth-of-type(4),
.carousel-section .gallery .control-operator:nth-of-type(5):target ~ .controls .control-button:nth-of-type(5) {
  background: url(../img/control-button-active.png) no-repeat;
  background-position: 50% 10%;
}

.carousel-section .gallery .item:first-of-type {
  opacity: 1;
  pointer-events: auto;
  position: static;
}

.carousel-section .gallery .item {
  -o-transition: opacity .5s;
  -webkit-transition: opacity .5s;
  height: 100%;
  left: 0;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 0;
  transition: opacity .5s;
  width: 100%;
}

.carousel-section .gallery .control-operator {
  display: none;
}

.carousel-section .gallery .control-operator:target ~ .item {
  -webkit-animation: none;
  animation: none;
  opacity: 0;
  pointer-events: none;
}

.carousel-section .gallery .control-operator:target ~ .controls .control-button {
  -webkit-animation: none;
  animation: none;
}

@-webkit-keyframes controlAnimation-2 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  14.3%, 50% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  64.3%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@keyframes controlAnimation-2 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  14.3%, 50% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  64.3%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@-webkit-keyframes galleryAnimation-2 {
  0% {
    opacity: 0;
  }
  14.3%, 50% {
    opacity: 1;
  }
  64.3%, 100% {
    opacity: 0;
  }
}

@keyframes galleryAnimation-2 {
  0% {
    opacity: 0;
  }
  14.3%, 50% {
    opacity: 1;
  }
  64.3%, 100% {
    opacity: 0;
  }
}

.carousel-section .gallery .control-operator:nth-of-type(1):target ~ .item:nth-of-type(1) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(2):target ~ .item:nth-of-type(2) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .items-2.autoplay .control-button {
  -webkit-animation: controlAnimation-2 14s infinite;
  animation: controlAnimation-2 14s infinite;
}

.carousel-section .items-2.autoplay .item {
  -webkit-animation: galleryAnimation-2 14s infinite;
  animation: galleryAnimation-2 14s infinite;
}

.carousel-section .items-2 .control-button:nth-of-type(1),
.carousel-section .items-2 .item:nth-of-type(1) {
  -webkit-animation-delay: -2s;
  animation-delay: -2s;
}

.carousel-section .items-2 .control-button:nth-of-type(2),
.carousel-section .items-2 .item:nth-of-type(2) {
  -webkit-animation-delay: 5s;
  animation-delay: 5s;
}

@-webkit-keyframes controlAnimation-3 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  9.5%, 33.3% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  42.9%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@keyframes controlAnimation-3 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  9.5%, 33.3% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  42.9%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@-webkit-keyframes galleryAnimation-3 {
  0% {
    opacity: 0;
  }
  9.5%, 33.3% {
    opacity: 1;
  }
  42.9%, 100% {
    opacity: 0;
  }
}

@keyframes galleryAnimation-3 {
  0% {
    opacity: 0;
  }
  9.5%, 33.3% {
    opacity: 1;
  }
  42.9%, 100% {
    opacity: 0;
  }
}

.carousel-section .gallery .control-operator:nth-of-type(1):target ~ .item:nth-of-type(1) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(2):target ~ .item:nth-of-type(2) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(3):target ~ .item:nth-of-type(3) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .items-3.autoplay .control-button {
  -webkit-animation: controlAnimation-3 21s infinite;
  animation: controlAnimation-3 21s infinite;
}

.carousel-section .items-3.autoplay .item {
  -webkit-animation: galleryAnimation-3 21s infinite;
  animation: galleryAnimation-3 21s infinite;
}

.carousel-section .items-3 .control-button:nth-of-type(1),
.carousel-section .items-3 .item:nth-of-type(1) {
  -webkit-animation-delay: -2s;
  animation-delay: -2s;
}

.carousel-section .items-3 .control-button:nth-of-type(2),
.carousel-section .items-3 .item:nth-of-type(2) {
  -webkit-animation-delay: 5s;
  animation-delay: 5s;
}

.carousel-section .items-3 .control-button:nth-of-type(3),
.carousel-section .items-3 .item:nth-of-type(3) {
  -webkit-animation-delay: 12s;
  animation-delay: 12s;
}

@-webkit-keyframes controlAnimation-4 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  7.1%, 25% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  32.1%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@keyframes controlAnimation-4 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  7.1%, 25% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  32.1%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@-webkit-keyframes galleryAnimation-4 {
  0% {
    opacity: 0;
  }
  7.1%, 25% {
    opacity: 1;
  }
  32.1%, 100% {
    opacity: 0;
  }
}

@keyframes galleryAnimation-4 {
  0% {
    opacity: 0;
  }
  7.1%, 25% {
    opacity: 1;
  }
  32.1%, 100% {
    opacity: 0;
  }
}

.carousel-section .gallery .control-operator:nth-of-type(1):target ~ .item:nth-of-type(1) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(2):target ~ .item:nth-of-type(2) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(3):target ~ .item:nth-of-type(3) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(4):target ~ .item:nth-of-type(4) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .items-4.autoplay .control-button {
  -webkit-animation: controlAnimation-4 28s infinite;
  animation: controlAnimation-4 28s infinite;
}

.carousel-section .items-4.autoplay .item {
  -webkit-animation: galleryAnimation-4 28s infinite;
  animation: galleryAnimation-4 28s infinite;
}

.carousel-section .items-4 .control-button:nth-of-type(1),
.carousel-section .items-4 .item:nth-of-type(1) {
  -webkit-animation-delay: -2s;
  animation-delay: -2s;
}

.carousel-section .items-4 .control-button:nth-of-type(2),
.carousel-section .items-4 .item:nth-of-type(2) {
  -webkit-animation-delay: 5s;
  animation-delay: 5s;
}

.carousel-section .items-4 .control-button:nth-of-type(3),
.carousel-section .items-4 .item:nth-of-type(3) {
  -webkit-animation-delay: 12s;
  animation-delay: 12s;
}

.carousel-section .items-4 .control-button:nth-of-type(4),
.carousel-section .items-4 .item:nth-of-type(4) {
  -webkit-animation-delay: 19s;
  animation-delay: 19s;
}

@-webkit-keyframes controlAnimation-5 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  5.7%, 20% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  25.7%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@keyframes controlAnimation-5 {
  0% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
  5.7%, 20% {
    color: white;
    color: rgba(255, 255, 255, 0.8);
  }
  25.7%, 100% {
    color: #ccc;
    color: rgba(255, 255, 255, 0.4);
  }
}

@-webkit-keyframes galleryAnimation-5 {
  0% {
    opacity: 0;
  }
  5.7%, 20% {
    opacity: 1;
  }
  25.7%, 100% {
    opacity: 0;
  }
}

@keyframes galleryAnimation-5 {
  0% {
    opacity: 0;
  }
  5.7%, 20% {
    opacity: 1;
  }
  25.7%, 100% {
    opacity: 0;
  }
}

.carousel-section .gallery .control-operator:nth-of-type(1):target ~ .item:nth-of-type(1) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(2):target ~ .item:nth-of-type(2) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(3):target ~ .item:nth-of-type(3) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(4):target ~ .item:nth-of-type(4) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .gallery .control-operator:nth-of-type(5):target ~ .item:nth-of-type(5) {
  pointer-events: auto;
  opacity: 1;
}

.carousel-section .items-5.autoplay .control-button {
  -webkit-animation: controlAnimation-5 35s infinite;
  animation: controlAnimation-5 35s infinite;
}

.carousel-section .items-5.autoplay .item {
  -webkit-animation: galleryAnimation-5 35s infinite;
  animation: galleryAnimation-5 35s infinite;
}

.carousel-section .items-5 .control-button:nth-of-type(1),
.carousel-section .items-5 .item:nth-of-type(1) {
  -webkit-animation-delay: -2s;
  animation-delay: -2s;
}

.carousel-section .items-5 .control-button:nth-of-type(2),
.carousel-section .items-5 .item:nth-of-type(2) {
  -webkit-animation-delay: 5s;
  animation-delay: 5s;
}

.carousel-section .items-5 .control-button:nth-of-type(3),
.carousel-section .items-5 .item:nth-of-type(3) {
  -webkit-animation-delay: 12s;
  animation-delay: 12s;
}

.carousel-section .items-5 .control-button:nth-of-type(4),
.carousel-section .items-5 .item:nth-of-type(4) {
  -webkit-animation-delay: 19s;
  animation-delay: 19s;
}

.carousel-section .items-5 .control-button:nth-of-type(5),
.carousel-section .items-5 .item:nth-of-type(5) {
  -webkit-animation-delay: 26s;
  animation-delay: 26s;
}

.carousel-section .gallery .control-button {
  color: #ccc;
  color: rgba(255, 255, 255, 0.4);
}

.carousel-section .gallery .control-button:hover {
  background: url(../img/Ellipse-2-copy-2.png) no-repeat;
  background-position: 50% 10%;
}

.carousel-section .gallery {
  position: relative;
}

.carousel-section .gallery .item {
  height: auto;
  overflow: hidden;
  padding-top: 48px;
  text-align: center;
}

.carousel-section .gallery .item .quote {
  font-size: 1.0625rem;
  color: #3a4246;
  font-family: 'Roboto', sans-serif;
  font-size: 17px;
  font-stretch: normal;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  margin: 19px 93px 0 81px;
}

.carousel-section .gallery .item .author {
  font-size: 0.9375rem;
  color: #1599a7;
  font-family: 'Roboto', sans-serif;
  font-size: 15px;
  font-stretch: normal;
  font-style: italic;
  font-weight: 300;
  margin: 10px 0 32px 0;
}

.carousel-section .gallery .controls {
  bottom: 0;
  height: 20px;
  position: absolute;
  text-align: center;
  width: 100%;
}

.carousel-section .gallery .control-button {
  background: url("../img/control-button.png") no-repeat;
  display: inline-block;
  font-size: 3em;
  text-align: center;
  text-decoration: none;
}

.carousel-section figure {
  margin: 0;
}

/*
  END CAROUSEL-SECTION
*/
html {
  /* Нужно для Firefox */
  /* Нужно для мобильного WebKit */
  box-sizing: border-box;
  font-size: 100%;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  margin: 0;
  padding: 0;
  background: #fefefe url("../img/background.png") no-repeat;
  background-position: top;
  font-family: "Roboto", Helvetica, Arial, sans-serif;
  font-weight: normal;
  line-height: 1;
  color: #0a0a0a;
}

img {
  display: inline-block;
  vertical-align: middle;
  max-width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;
}

textarea {
  height: auto;
  min-height: 50px;
  border-radius: 0;
}

select {
  width: 100%;
  border-radius: 0;
}

.map_canvas img,
.map_canvas embed,
.map_canvas object,
.mqa-display img,
.mqa-display embed,
.mqa-display object {
  max-width: none !important;
}

button {
  padding: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: 0;
  border-radius: 0;
  background: transparent;
  line-height: 1;
}

.is-visible {
  display: block !important;
}

.is-hidden {
  display: none !important;
}

.container {
  margin: 0 auto;
  max-width: 824px;
  overflow: hidden;
}

@media (max-width: 480px) {
  .container {
    max-width: 400px;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .container {
    max-width: 748px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY3NzIiwiYmFzZS9fbm9ybWFsaXplLnNjc3MiLCJiYXNlL190eXBvZ3JhcGh5LnNjc3MiLCJsYXlvdXQvX2hlYWRlci5zY3NzIiwidXRpbHMvX2ZsZXguc2NzcyIsInV0aWxzL19taXhpbnMuc2NzcyIsInV0aWxzL192YXJpYWJsZXMuc2NzcyIsImxheW91dC9fdGl0bGUtc2VjdGlvbi5zY3NzIiwibGF5b3V0L19hcnRpY2xlLnNjc3MiLCJsYXlvdXQvX2luZm8tc2VjdGlvbi5zY3NzIiwidXRpbHMvX2Z1bmN0aW9ucy5zY3NzIiwibGF5b3V0L19mb290ZXIuc2NzcyIsImNvbXBvbmVudHMvX2Nhcm91c2VsLnNjc3MiLCJfZ2xvYmFsLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDQWpCOztnRkFFZ0Y7QUFDaEY7Ozs7R0FJRztBQUlIO2dGQUNnRjtBQUVoRjs7Ozs7O0dBTUc7QUNwQkgsOEZBQVk7QURzQlo7RUFDRSx3QkFBd0I7RUFBRSxPQUFPO0VBQ2pDLDJCQUEyQjtFQUFFLE9BQU87RUFDcEMsK0JBQStCO0VBQUUsT0FBTztDQUl6Qzs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsVUFBVTtDQUNYOztBQUVEO2dGQUNnRjtBQUVoRjs7Ozs7R0FLRztBQUVIOzs7Ozs7Ozs7Ozs7O0VBYUUsZUFBZTtDQUNoQjs7QUFFRDs7O0dBR0c7QUFFSDs7OztFQUlFLHNCQUFzQjtFQUFFLE9BQU87RUFDL0IseUJBQXlCO0VBQUUsT0FBTztDQUtuQzs7QUFFRDs7O0dBR0c7QUFFSDtFQUNFLGNBQWM7RUFDZCxVQUFVO0NBQ1g7O0FBRUQ7OztHQUdHO0FEVEg7O0VDYUUsY0FBYztDQUNmOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsOEJBQThCO0NBQy9COztBQUVEOzs7R0FHRztBQUVIO0VBRUksV0FBVztDQUNaOztBQUdIO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsMEJBQTBCO0NBQzNCOztBQUVEOztH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akIsc0JBQWlCO1VBQWpCLGlCQUFpQjtFQUNqQixVQUFVO0VBQ1YsaUJBOUZhO0VBK0ZiLHdCQUF3QjtFQUN4QixlQUFlO0NBQ2hCOztBQUdEO0VBQ0UsMEJBQTBCO0NBQzNCOztBQUVEO0VBQ0UseUJBQXlCO0NBQzFCOztBQUVEO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixpQkFBaUI7Q0FTbEI7O0FBUEM7RUFMRjtJQU1JLGlCQUFpQjtHQU1wQjtDYjRuREY7O0FhL25ERztFQVRGO0lBVUksaUJBQWlCO0dBRXBCO0Nia29ERiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICBOb3JtYWxpemUuc2NzcyBzZXR0aW5nc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogSW5jbHVkZXMgbGVnYWN5IGJyb3dzZXIgc3VwcG9ydCBJRTYvN1xuICpcbiAqIFNldCB0byBmYWxzZSBpZiB5b3Ugd2FudCB0byBkcm9wIHN1cHBvcnQgZm9yIElFNiBhbmQgSUU3XG4gKi9cbi8qIEJhc2VcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICogMy4gQ29ycmVjdHMgdGV4dCByZXNpemluZyBvZGRseSBpbiBJRSA2Lzcgd2hlbiBib2R5IGBmb250LXNpemVgIGlzIHNldCB1c2luZ1xuICogIGBlbWAgdW5pdHMuXG4gKi9cbkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PURhbmNpbmcrU2NyaXB0fFJvYm90bzozMDAsNDAwLDQwMGksNTAwXCIpO1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA2LzcvOC85IGFuZCBGaXJlZm94IDMuXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50cyBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIGZvY3VzZWQgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBhbHNvIGluIGFuXG4gKiBhY3RpdmUvaG92ZXIgc3RhdGUuXG4gKi9cbmE6YWN0aXZlLCBhOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzZXMgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICogMi4gSW1wcm92ZXMgaW1hZ2UgcXVhbGl0eSB3aGVuIHNjYWxlZCBpbiBJRSA3LlxuICovXG5pbWcge1xuICBib3JkZXI6IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqIENvcnJlY3QgZm9udCBmYW1pbHkgc2V0IG9kZGx5IGluIElFIDYsIFNhZmFyaSA0LzUsIGFuZCBDaHJvbWUuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICogNC4gSW1wcm92ZXMgYXBwZWFyYW5jZSBhbmQgY29uc2lzdGVuY3kgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovXG4gIG1hcmdpbjogMDtcbiAgLyogMyAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICogNC4gUmVtb3ZlcyBpbm5lciBzcGFjaW5nIGluIElFIDcgd2l0aG91dCBhZmZlY3Rpbmcgbm9ybWFsIHRleHQgaW5wdXRzLlxuICogIEtub3duIGlzc3VlOiBpbm5lciBzcGFjaW5nIHJlbWFpbnMgaW4gSUUgNi5cbiAqL1xuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLyogMyAqL1xufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKiAgS25vd24gaXNzdWU6IGV4Y2VzcyBwYWRkaW5nIHJlbWFpbnMgaW4gSUUgNi5cbiAqL1xuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICogMy4gQ29ycmVjdHMgdGV4dCBub3Qgd3JhcHBpbmcgaW4gRmlyZWZveCAzLlxuICogNC4gQ29ycmVjdHMgYWxpZ25tZW50IGRpc3BsYXllZCBvZGRseSBpbiBJRSA2LzcuXG4gKi9cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKlxuICBIRUFERVIgU0VDVElPTlxuKi9cbi5oZWFkZXIge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmhlYWRlciAubWVudSB7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiBob3Jpem9udGFsO1xuICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIC1tb3otZmxleC1kaXJlY3Rpb246IHJvdztcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tb3otZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGVuZDtcbiAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIC1tb3otanVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmhlYWRlciAubWVudSAubmF2IHtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gIC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcbiAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogcm93O1xuICAtbW96LWZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbW96LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nLXRvcDogMTlweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5oZWFkZXIgLm1lbnUgLm5hdiB7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtbW96LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAtbW96LWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gICAgZGlzcGxheTogLW1vei1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZzogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDgxcHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyIC5tZW51IC5uYXYge1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgLW1vei1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiBob3Jpem9udGFsO1xuICAgIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAtbW96LWZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gICAgZGlzcGxheTogLW1vei1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZy10b3A6IDE5cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5oZWFkZXIgLm1lbnUgLm5hdiAuaXRlbSB7XG4gIG1hcmdpbjogMCAyMHB4IDAgMTdweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5oZWFkZXIgLm1lbnUgLm5hdiAuaXRlbSB7XG4gICAgbWFyZ2luOiA1cHggMCA1cHggMDtcbiAgfVxufVxuXG4uaGVhZGVyIC5tZW51IC5uYXYgLml0ZW06Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLmhlYWRlciAubWVudSAubmF2IC5pdGVtOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbn1cblxuLmhlYWRlciAubWVudSAubmF2IC5pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tbGVmdDogMTNweDtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLmhlYWRlciAubWVudSAubmF2IC5pdGVtOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbjogMDtcbiAgfVxufVxuXG4uaGVhZGVyIC5tZW51IC5uYXYgLml0ZW0gLmxpbmsge1xuICBmb250LXNpemU6IDEuMDMxMjVyZW07XG4gIGNvbG9yOiAjM2E0MjQ2O1xuICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTYuNXB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogMzAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5oZWFkZXIgLm1lbnUgLm5hdiAuaXRlbSAubGluazpob3ZlciB7XG4gIGNvbG9yOiAjZmVmZWZlO1xufVxuXG4uaGVhZGVyIC5tZW51IC5uYXYgLml0ZW0gLmxpbmstYWN0aXZlIHtcbiAgY29sb3I6ICNmZWZlZmU7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi8qXG4gIEVORCBIRUFERVIgU0VDVElPTlxuKi9cbi8qXG4gIFRJVExFLVNFQ1RJT05cbiovXG4udGl0bGUtc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiA5OHB4O1xuICBwYWRkaW5nLXRvcDogMzZweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLnRpdGxlLXNlY3Rpb24ge1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICB9XG59XG5cbi50aXRsZS1zZWN0aW9uIGgxIHtcbiAgZm9udC1zaXplOiA1cmVtO1xuICBjb2xvcjogI2ZlZmVmZTtcbiAgZm9udC1mYW1pbHk6ICdEYW5jaW5nIFNjcmlwdCcsIGN1cnNpdmU7XG4gIGZvbnQtc2l6ZTogODBweDtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbWFyZ2luOiAwIDAgMTBweCAwO1xufVxuXG4udGl0bGUtc2VjdGlvbiBwIHtcbiAgZm9udC1zaXplOiAyLjEyNXJlbTtcbiAgY29sb3I6ICNmZWZlZmU7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAzNHB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBtYXJnaW46IDAgMCAxNHB4IDA7XG59XG5cbi50aXRsZS1zZWN0aW9uIC5idG4ge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgYmFja2dyb3VuZDogIzAwMzMzMztcbiAgY29sb3I6ICNmZWZlZmU7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogMzAwO1xuICBtYXJnaW4tdG9wOiAyMnB4O1xuICBwYWRkaW5nOiAxMnB4IDIycHg7XG59XG5cbi8qXG4gIEVORCBUSVRMRS1TRUNUSU9OXG4qL1xuLypcbiAgQVJUSUNMRS1TRUNUSU9OXG4qL1xuLmFydGljbGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZy10b3A6IDY5cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5hcnRpY2xlIHtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgfVxufVxuXG4uYXJ0aWNsZSBoMyB7XG4gIGZvbnQtc2l6ZTogMi4wMzEyNXJlbTtcbiAgY29sb3I6ICMzYTQyNDY7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAzMi41cHg7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG1hcmdpbjogMCAwIDIxcHggMTZweDtcbn1cblxuLmFydGljbGUgcCB7XG4gIGZvbnQtc2l6ZTogMS4xODc1cmVtO1xuICBjb2xvcjogIzNhNDI0NjtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE5cHg7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIG1hcmdpbjogMCAwIDYycHggMjVweDtcbn1cblxuLypcbiAgRU5EIEFSVElDTEUtU0VDVElPTlxuKi9cbi8qXG4gIElORk8tU0VDVElPTlxuKi9cbi5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG59XG5cbi5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuaXNsYW5kLWJnIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vcGljL2lzbGFuZC1iZy5wbmdcIikgbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBoZWlnaHQ6IDE5MnB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5pc2xhbmQtYmcge1xuICAgIGhlaWdodDogMTQxcHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ5cHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLmlzbGFuZC1iZyB7XG4gICAgaGVpZ2h0OiAxNzZweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB9XG59XG5cbi5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuZGlzaCB7XG4gIHBhZGRpbmctdG9wOiAyM3B4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5kaXNoIHtcbiAgICBwYWRkaW5nOiAxMHB4IDVweCAwIDVweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ5cHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLmRpc2gge1xuICAgIHBhZGRpbmctdG9wOiAzJXB4O1xuICB9XG59XG5cbi5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuZGlzaCAuaW1nLWRpc2gge1xuICBtYXJnaW4tYm90dG9tOiA5cHg7XG4gIHdpZHRoOiAxOCU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLmRpc2ggLmltZy1kaXNoIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU0OXB4KSBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5kaXNoIC5pbWctZGlzaCB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG5cbi5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuZGlzaCBwIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgbWFyZ2luOiAwIDAgM3B4IDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLmRpc2ggcCB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NDlweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuZGlzaCBwIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbn1cblxuLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5kaXNoIHNwYW4ge1xuICBmb250LXNpemU6IDEuMTg3NXJlbTtcbiAgZm9udC1zaXplOiAxOXB4O1xufVxuXG4uaW5mby1zZWN0aW9uIC5jb250YWluZXIgLmhvdGVsLWJnIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vcGljL2hvdGVsLWJnLnBuZ1wiKSBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGhlaWdodDogMTkycHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLmhvdGVsLWJnIHtcbiAgICBoZWlnaHQ6IDE0MXB4O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NDlweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuaG90ZWwtYmcge1xuICAgIGhlaWdodDogMTc2cHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxufVxuXG4uaW5mby1zZWN0aW9uIC5jb250YWluZXIgLm1vbnVtZW50IHtcbiAgcGFkZGluZy10b3A6IDMzcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLm1vbnVtZW50IHtcbiAgICBwYWRkaW5nOiAxMHB4IDVweCAwIDVweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ5cHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLm1vbnVtZW50IHtcbiAgICBwYWRkaW5nLXRvcDogMyVweDtcbiAgfVxufVxuXG4uaW5mby1zZWN0aW9uIC5jb250YWluZXIgLm1vbnVtZW50IC5pbWctbW9udW1lbnQge1xuICBtYXJnaW4tYm90dG9tOiA5cHg7XG4gIHdpZHRoOiAxMiU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLm1vbnVtZW50IC5pbWctbW9udW1lbnQge1xuICAgIG1hcmdpbjogMDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDgxcHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLm1vbnVtZW50IC5pbWctbW9udW1lbnQge1xuICAgIG1hcmdpbjogMDtcbiAgfVxufVxuXG4uaW5mby1zZWN0aW9uIC5jb250YWluZXIgLm1vbnVtZW50IHAge1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW46IDAgMCAzcHggMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAubW9udW1lbnQgcCB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0ODFweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAubW9udW1lbnQgcCB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG5cbi5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAubW9udW1lbnQgc3BhbiB7XG4gIGZvbnQtc2l6ZTogMS4xODc1cmVtO1xuICBmb250LXNpemU6IDE5cHg7XG59XG5cbi5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAubW91bnRhaW4tYmcge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9waWMvbW91bnRhaW4tYmcucG5nXCIpIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAxOTJweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAubW91bnRhaW4tYmcge1xuICAgIGhlaWdodDogMTQxcHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ5cHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLm1vdW50YWluLWJnIHtcbiAgICBoZWlnaHQ6IDE3NnB4O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbn1cblxuLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5jaXR5LWJnIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vcGljL2NpdHktYmcucG5nXCIpIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAxOTJweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuY2l0eS1iZyB7XG4gICAgaGVpZ2h0OiAxNDFweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NDlweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuY2l0eS1iZyB7XG4gICAgaGVpZ2h0OiAxNzZweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB9XG59XG5cbi5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAueWFjaHQtYmcge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9waWMveWFjaHQtYmcucG5nXCIpIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAxOTJweDtcbiAgcGFkZGluZy10b3A6IDIzLjMxJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAueWFjaHQtYmcge1xuICAgIGhlaWdodDogMTQxcHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ5cHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLnlhY2h0LWJnIHtcbiAgICBoZWlnaHQ6IDE3NnB4O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbn1cblxuLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5jb2FzdC1iZyB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL3BpYy9jb2FzdC1iZy5wbmdcIikgbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBoZWlnaHQ6IDE5MnB4O1xuICBwYWRkaW5nLXRvcDogMjMuMjUlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5jb2FzdC1iZyB7XG4gICAgaGVpZ2h0OiAxNDFweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NDlweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuY29hc3QtYmcge1xuICAgIGhlaWdodDogMTc2cHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxufVxuXG4uaW5mby1zZWN0aW9uIC5jb250YWluZXIgLmZsb3dlciB7XG4gIHBhZGRpbmctdG9wOiAzM3B4O1xuICBoZWlnaHQ6IDIzLjI1JTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuZmxvd2VyIHtcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ5cHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLmZsb3dlciB7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG4gIH1cbn1cblxuLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5mbG93ZXIgLmltZy1mbG93ZXIge1xuICBtYXJnaW4tYm90dG9tOiAxMXB4O1xuICBtYXJnaW4tbGVmdDogMTZweDtcbiAgd2lkdGg6IDEzJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuZmxvd2VyIC5pbWctZmxvd2VyIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ4MXB4KSBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5mbG93ZXIgLmltZy1mbG93ZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICB9XG59XG5cbi5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuZmxvd2VyIHAge1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW46IDBweCAwIDNweCAxOHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5mbG93ZXIgcCB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0ODFweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5pbmZvLXNlY3Rpb24gLmNvbnRhaW5lciAuZmxvd2VyIHAge1xuICAgIG1hcmdpbjogMHB4IDAgM3B4IDA7XG4gIH1cbn1cblxuLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5mbG93ZXIgc3BhbiB7XG4gIGZvbnQtc2l6ZTogMS4xODc1cmVtO1xuICBmb250LXNpemU6IDE5cHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NDhweCkge1xuICAuaW5mby1zZWN0aW9uIC5jb250YWluZXIgLnNwYW4tdHdvIHtcbiAgICBjb2xvcjogIzNhNDI0NjtcbiAgICBmbGV4OiAxIDAgYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ5cHgpIHtcbiAgLmluZm8tc2VjdGlvbiAuY29udGFpbmVyIC5zcGFuLXRocmVlIHtcbiAgICBjb2xvcjogIzNhNDI0NjtcbiAgICBmbGV4OiAxIDAgYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDMzLjMzMzMzMzMzMzMlO1xuICB9XG59XG5cbi8qXG4gIEVORCBJTkZPLVNFQ1RJT05cbiovXG4vKlxuICBGT09URVIgU0VDVElPTlxuKi9cbi5mb290ZXIge1xuICAtbW96LWZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xuICAtbXMtZmlsdGVyOiBncmF5c2NhbGUoMTAwJSk7XG4gIC1vLWZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xuICAtd2Via2l0LWZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvYmFja2dyb3VuZC0yLnBuZ1wiKSA1MCUgODklIG5vLXJlcGVhdDtcbiAgZmlsdGVyOiBncmF5O1xuICAvKiBJRSA2LTkgKi9cbiAgZmlsdGVyOiBncmF5c2NhbGUoMTAwJSk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5mb290ZXIgcCB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBjb2xvcjogI2ZlZmVmZTtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG1hcmdpbjogNDlweCAwcHggMHB4IDIycHg7XG59XG5cbi5mb290ZXIgLm1lbnUge1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tb3otYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gIC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcbiAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogcm93O1xuICAtbW96LWZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbW96LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5mb290ZXIgLm1lbnUgLm5hdiB7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAtd2Via2l0LWJveC1vcmllbnQ6IGhvcml6b250YWw7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IHJvdztcbiAgLW1vei1mbGV4LWRpcmVjdGlvbjogcm93O1xuICAtbXMtZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1vei1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgY29sb3I6ICNmZWZlZmU7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDAgMCAzMHB4IDA7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgcGFkZGluZy10b3A6IDIycHg7XG59XG5cbi5mb290ZXIgLm1lbnUgLm5hdiAuaXRlbSB7XG4gIG1hcmdpbjogMCA1cHggMCA1cHg7XG59XG5cbi5mb290ZXIgLm1lbnUgLm5hdiAuaXRlbTpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbn1cblxuLmZvb3RlciAubWVudSAubmF2IC5pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG4uZm9vdGVyIC5tZW51IC5uYXYgLml0ZW0gLmxpbmsge1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xuICBjb2xvcjogI2ZlZmVmZTtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmZvb3RlciAubWVudSAubmF2IC5pdGVtIC5saW5rOmhvdmVyIHtcbiAgY29sb3I6ICMwYTBhMGE7XG59XG5cbi5mb290ZXIgLm1lbnUgLm5hdiAuaXRlbSAubGluay1uby1hY3RpdmUge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi5mb290ZXIgLm1lbnUgLm5hdiAuaXRlbSAubGluay1uby1hY3RpdmU6aG92ZXIge1xuICBjb2xvcjogI2ZlZmVmZTtcbn1cblxuLypcbiAgRU5EIEZPT1RFUiBTRUNUSU9OXG4qL1xuLypcbiAgQ0FST1VTRUwtU0VDVElPTlxuKi9cbi5jYXJvdXNlbC1zZWN0aW9uIHtcbiAgbWFyZ2luLWJvdHRvbTogMjZweDtcbiAgLypcbiAgXHRUaGVtZSBjb250cm9scyBob3cgZXZlcnl0aGluZyBsb29rcyBpbiBHYWxsZXJ5IENTUy5cbiAgKi9cbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoMSk6dGFyZ2V0IH4gLmNvbnRyb2xzIC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgxKSxcbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDIpOnRhcmdldCB+IC5jb250cm9scyAuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoMiksXG4uY2Fyb3VzZWwtc2VjdGlvbiAuZ2FsbGVyeSAuY29udHJvbC1vcGVyYXRvcjpudGgtb2YtdHlwZSgzKTp0YXJnZXQgfiAuY29udHJvbHMgLmNvbnRyb2wtYnV0dG9uOm50aC1vZi10eXBlKDMpLFxuLmNhcm91c2VsLXNlY3Rpb24gLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoNCk6dGFyZ2V0IH4gLmNvbnRyb2xzIC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSg0KSxcbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDUpOnRhcmdldCB+IC5jb250cm9scyAuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoNSkge1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL2NvbnRyb2wtYnV0dG9uLWFjdGl2ZS5wbmcpIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDEwJTtcbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gLmdhbGxlcnkgLml0ZW06Zmlyc3Qtb2YtdHlwZSB7XG4gIG9wYWNpdHk6IDE7XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICBwb3NpdGlvbjogc3RhdGljO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuZ2FsbGVyeSAuaXRlbSB7XG4gIC1vLXRyYW5zaXRpb246IG9wYWNpdHkgLjVzO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgLjVzO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIG9wYWNpdHk6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNXM7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuZ2FsbGVyeSAuY29udHJvbC1vcGVyYXRvciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOnRhcmdldCB+IC5pdGVtIHtcbiAgLW8tYW5pbWF0aW9uOiBub25lO1xuICAtd2Via2l0LWFuaW1hdGlvbjogbm9uZTtcbiAgYW5pbWF0aW9uOiBub25lO1xuICBvcGFjaXR5OiAwO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6dGFyZ2V0IH4gLmNvbnRyb2xzIC5jb250cm9sLWJ1dHRvbiB7XG4gIC1vLWFuaW1hdGlvbjogbm9uZTtcbiAgLXdlYmtpdC1hbmltYXRpb246IG5vbmU7XG4gIGFuaW1hdGlvbjogbm9uZTtcbn1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGNvbnRyb2xBbmltYXRpb24tMiB7XG4gIDAlIHtcbiAgICBjb2xvcjogI2NjYztcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICB9XG4gIDE0LjMlLCA1MCUge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICB9XG4gIDY0LjMlLCAxMDAlIHtcbiAgICBjb2xvcjogI2NjYztcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICB9XG59XG5cbkAtby1rZXlmcmFtZXMgY29udHJvbEFuaW1hdGlvbi0yIHtcbiAgMCUge1xuICAgIGNvbG9yOiAjY2NjO1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gIH1cbiAgMTQuMyUsIDUwJSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gIH1cbiAgNjQuMyUsIDEwMCUge1xuICAgIGNvbG9yOiAjY2NjO1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBjb250cm9sQW5pbWF0aW9uLTIge1xuICAwJSB7XG4gICAgY29sb3I6ICNjY2M7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgfVxuICAxNC4zJSwgNTAlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgfVxuICA2NC4zJSwgMTAwJSB7XG4gICAgY29sb3I6ICNjY2M7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgfVxufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgZ2FsbGVyeUFuaW1hdGlvbi0yIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgMTQuMyUsIDUwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICA2NC4zJSwgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG5ALW8ta2V5ZnJhbWVzIGdhbGxlcnlBbmltYXRpb24tMiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDE0LjMlLCA1MCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgNjQuMyUsIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBnYWxsZXJ5QW5pbWF0aW9uLTIge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICAxNC4zJSwgNTAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDY0LjMlLCAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDEpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDEpIHtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDIpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDIpIHtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy0yLmF1dG9wbGF5IC5jb250cm9sLWJ1dHRvbiB7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiBjb250cm9sQW5pbWF0aW9uLTIgMTRzIGluZmluaXRlO1xuICAtby1hbmltYXRpb246IGNvbnRyb2xBbmltYXRpb24tMiAxNHMgaW5maW5pdGU7XG4gIGFuaW1hdGlvbjogY29udHJvbEFuaW1hdGlvbi0yIDE0cyBpbmZpbml0ZTtcbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gLml0ZW1zLTIuYXV0b3BsYXkgLml0ZW0ge1xuICAtd2Via2l0LWFuaW1hdGlvbjogZ2FsbGVyeUFuaW1hdGlvbi0yIDE0cyBpbmZpbml0ZTtcbiAgLW8tYW5pbWF0aW9uOiBnYWxsZXJ5QW5pbWF0aW9uLTIgMTRzIGluZmluaXRlO1xuICBhbmltYXRpb246IGdhbGxlcnlBbmltYXRpb24tMiAxNHMgaW5maW5pdGU7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy0yIC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgxKSxcbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy0yIC5pdGVtOm50aC1vZi10eXBlKDEpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0ycztcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiAtMnM7XG4gIGFuaW1hdGlvbi1kZWxheTogLTJzO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtMiAuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoMiksXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtMiAuaXRlbTpudGgtb2YtdHlwZSgyKSB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiA1cztcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiA1cztcbiAgYW5pbWF0aW9uLWRlbGF5OiA1cztcbn1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGNvbnRyb2xBbmltYXRpb24tMyB7XG4gIDAlIHtcbiAgICBjb2xvcjogI2NjYztcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICB9XG4gIDkuNSUsIDMzLjMlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgfVxuICA0Mi45JSwgMTAwJSB7XG4gICAgY29sb3I6ICNjY2M7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgfVxufVxuXG5ALW8ta2V5ZnJhbWVzIGNvbnRyb2xBbmltYXRpb24tMyB7XG4gIDAlIHtcbiAgICBjb2xvcjogI2NjYztcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICB9XG4gIDkuNSUsIDMzLjMlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgfVxuICA0Mi45JSwgMTAwJSB7XG4gICAgY29sb3I6ICNjY2M7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGNvbnRyb2xBbmltYXRpb24tMyB7XG4gIDAlIHtcbiAgICBjb2xvcjogI2NjYztcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICB9XG4gIDkuNSUsIDMzLjMlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgfVxuICA0Mi45JSwgMTAwJSB7XG4gICAgY29sb3I6ICNjY2M7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgfVxufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgZ2FsbGVyeUFuaW1hdGlvbi0zIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgOS41JSwgMzMuMyUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgNDIuOSUsIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuQC1vLWtleWZyYW1lcyBnYWxsZXJ5QW5pbWF0aW9uLTMge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICA5LjUlLCAzMy4zJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICA0Mi45JSwgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGdhbGxlcnlBbmltYXRpb24tMyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDkuNSUsIDMzLjMlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDQyLjklLCAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDEpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDEpIHtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDIpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDIpIHtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDMpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDMpIHtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy0zLmF1dG9wbGF5IC5jb250cm9sLWJ1dHRvbiB7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiBjb250cm9sQW5pbWF0aW9uLTMgMjFzIGluZmluaXRlO1xuICAtby1hbmltYXRpb246IGNvbnRyb2xBbmltYXRpb24tMyAyMXMgaW5maW5pdGU7XG4gIGFuaW1hdGlvbjogY29udHJvbEFuaW1hdGlvbi0zIDIxcyBpbmZpbml0ZTtcbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gLml0ZW1zLTMuYXV0b3BsYXkgLml0ZW0ge1xuICAtd2Via2l0LWFuaW1hdGlvbjogZ2FsbGVyeUFuaW1hdGlvbi0zIDIxcyBpbmZpbml0ZTtcbiAgLW8tYW5pbWF0aW9uOiBnYWxsZXJ5QW5pbWF0aW9uLTMgMjFzIGluZmluaXRlO1xuICBhbmltYXRpb246IGdhbGxlcnlBbmltYXRpb24tMyAyMXMgaW5maW5pdGU7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy0zIC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgxKSxcbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy0zIC5pdGVtOm50aC1vZi10eXBlKDEpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0ycztcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiAtMnM7XG4gIGFuaW1hdGlvbi1kZWxheTogLTJzO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtMyAuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoMiksXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtMyAuaXRlbTpudGgtb2YtdHlwZSgyKSB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiA1cztcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiA1cztcbiAgYW5pbWF0aW9uLWRlbGF5OiA1cztcbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gLml0ZW1zLTMgLmNvbnRyb2wtYnV0dG9uOm50aC1vZi10eXBlKDMpLFxuLmNhcm91c2VsLXNlY3Rpb24gLml0ZW1zLTMgLml0ZW06bnRoLW9mLXR5cGUoMykge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogMTJzO1xuICAtby1hbmltYXRpb24tZGVsYXk6IDEycztcbiAgYW5pbWF0aW9uLWRlbGF5OiAxMnM7XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBjb250cm9sQW5pbWF0aW9uLTQge1xuICAwJSB7XG4gICAgY29sb3I6ICNjY2M7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgfVxuICA3LjElLCAyNSUge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICB9XG4gIDMyLjElLCAxMDAlIHtcbiAgICBjb2xvcjogI2NjYztcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICB9XG59XG5cbkAtby1rZXlmcmFtZXMgY29udHJvbEFuaW1hdGlvbi00IHtcbiAgMCUge1xuICAgIGNvbG9yOiAjY2NjO1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gIH1cbiAgNy4xJSwgMjUlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgfVxuICAzMi4xJSwgMTAwJSB7XG4gICAgY29sb3I6ICNjY2M7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGNvbnRyb2xBbmltYXRpb24tNCB7XG4gIDAlIHtcbiAgICBjb2xvcjogI2NjYztcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICB9XG4gIDcuMSUsIDI1JSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gIH1cbiAgMzIuMSUsIDEwMCUge1xuICAgIGNvbG9yOiAjY2NjO1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gIH1cbn1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGdhbGxlcnlBbmltYXRpb24tNCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDcuMSUsIDI1JSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAzMi4xJSwgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG5ALW8ta2V5ZnJhbWVzIGdhbGxlcnlBbmltYXRpb24tNCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDcuMSUsIDI1JSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAzMi4xJSwgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGdhbGxlcnlBbmltYXRpb24tNCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDcuMSUsIDI1JSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAzMi4xJSwgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuZ2FsbGVyeSAuY29udHJvbC1vcGVyYXRvcjpudGgtb2YtdHlwZSgxKTp0YXJnZXQgfiAuaXRlbTpudGgtb2YtdHlwZSgxKSB7XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICBvcGFjaXR5OiAxO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuZ2FsbGVyeSAuY29udHJvbC1vcGVyYXRvcjpudGgtb2YtdHlwZSgyKTp0YXJnZXQgfiAuaXRlbTpudGgtb2YtdHlwZSgyKSB7XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICBvcGFjaXR5OiAxO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuZ2FsbGVyeSAuY29udHJvbC1vcGVyYXRvcjpudGgtb2YtdHlwZSgzKTp0YXJnZXQgfiAuaXRlbTpudGgtb2YtdHlwZSgzKSB7XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICBvcGFjaXR5OiAxO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuZ2FsbGVyeSAuY29udHJvbC1vcGVyYXRvcjpudGgtb2YtdHlwZSg0KTp0YXJnZXQgfiAuaXRlbTpudGgtb2YtdHlwZSg0KSB7XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICBvcGFjaXR5OiAxO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtNC5hdXRvcGxheSAuY29udHJvbC1idXR0b24ge1xuICAtd2Via2l0LWFuaW1hdGlvbjogY29udHJvbEFuaW1hdGlvbi00IDI4cyBpbmZpbml0ZTtcbiAgLW8tYW5pbWF0aW9uOiBjb250cm9sQW5pbWF0aW9uLTQgMjhzIGluZmluaXRlO1xuICBhbmltYXRpb246IGNvbnRyb2xBbmltYXRpb24tNCAyOHMgaW5maW5pdGU7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy00LmF1dG9wbGF5IC5pdGVtIHtcbiAgLXdlYmtpdC1hbmltYXRpb246IGdhbGxlcnlBbmltYXRpb24tNCAyOHMgaW5maW5pdGU7XG4gIC1vLWFuaW1hdGlvbjogZ2FsbGVyeUFuaW1hdGlvbi00IDI4cyBpbmZpbml0ZTtcbiAgYW5pbWF0aW9uOiBnYWxsZXJ5QW5pbWF0aW9uLTQgMjhzIGluZmluaXRlO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtNCAuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoMSksXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtNCAuaXRlbTpudGgtb2YtdHlwZSgxKSB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAtMnM7XG4gIC1vLWFuaW1hdGlvbi1kZWxheTogLTJzO1xuICBhbmltYXRpb24tZGVsYXk6IC0ycztcbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gLml0ZW1zLTQgLmNvbnRyb2wtYnV0dG9uOm50aC1vZi10eXBlKDIpLFxuLmNhcm91c2VsLXNlY3Rpb24gLml0ZW1zLTQgLml0ZW06bnRoLW9mLXR5cGUoMikge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogNXM7XG4gIC1vLWFuaW1hdGlvbi1kZWxheTogNXM7XG4gIGFuaW1hdGlvbi1kZWxheTogNXM7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy00IC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgzKSxcbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy00IC5pdGVtOm50aC1vZi10eXBlKDMpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDEycztcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiAxMnM7XG4gIGFuaW1hdGlvbi1kZWxheTogMTJzO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtNCAuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoNCksXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtNCAuaXRlbTpudGgtb2YtdHlwZSg0KSB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAxOXM7XG4gIC1vLWFuaW1hdGlvbi1kZWxheTogMTlzO1xuICBhbmltYXRpb24tZGVsYXk6IDE5cztcbn1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGNvbnRyb2xBbmltYXRpb24tNSB7XG4gIDAlIHtcbiAgICBjb2xvcjogI2NjYztcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICB9XG4gIDUuNyUsIDIwJSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gIH1cbiAgMjUuNyUsIDEwMCUge1xuICAgIGNvbG9yOiAjY2NjO1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gIH1cbn1cblxuQC1vLWtleWZyYW1lcyBjb250cm9sQW5pbWF0aW9uLTUge1xuICAwJSB7XG4gICAgY29sb3I6ICNjY2M7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgfVxuICA1LjclLCAyMCUge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICB9XG4gIDI1LjclLCAxMDAlIHtcbiAgICBjb2xvcjogI2NjYztcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgY29udHJvbEFuaW1hdGlvbi01IHtcbiAgMCUge1xuICAgIGNvbG9yOiAjY2NjO1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gIH1cbiAgNS43JSwgMjAlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgfVxuICAyNS43JSwgMTAwJSB7XG4gICAgY29sb3I6ICNjY2M7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgfVxufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgZ2FsbGVyeUFuaW1hdGlvbi01IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgNS43JSwgMjAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDI1LjclLCAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbkAtby1rZXlmcmFtZXMgZ2FsbGVyeUFuaW1hdGlvbi01IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgNS43JSwgMjAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDI1LjclLCAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgZ2FsbGVyeUFuaW1hdGlvbi01IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgNS43JSwgMjAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDI1LjclLCAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDEpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDEpIHtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDIpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDIpIHtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDMpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDMpIHtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDQpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDQpIHtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDUpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDUpIHtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy01LmF1dG9wbGF5IC5jb250cm9sLWJ1dHRvbiB7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiBjb250cm9sQW5pbWF0aW9uLTUgMzVzIGluZmluaXRlO1xuICAtby1hbmltYXRpb246IGNvbnRyb2xBbmltYXRpb24tNSAzNXMgaW5maW5pdGU7XG4gIGFuaW1hdGlvbjogY29udHJvbEFuaW1hdGlvbi01IDM1cyBpbmZpbml0ZTtcbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gLml0ZW1zLTUuYXV0b3BsYXkgLml0ZW0ge1xuICAtd2Via2l0LWFuaW1hdGlvbjogZ2FsbGVyeUFuaW1hdGlvbi01IDM1cyBpbmZpbml0ZTtcbiAgLW8tYW5pbWF0aW9uOiBnYWxsZXJ5QW5pbWF0aW9uLTUgMzVzIGluZmluaXRlO1xuICBhbmltYXRpb246IGdhbGxlcnlBbmltYXRpb24tNSAzNXMgaW5maW5pdGU7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy01IC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgxKSxcbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy01IC5pdGVtOm50aC1vZi10eXBlKDEpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0ycztcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiAtMnM7XG4gIGFuaW1hdGlvbi1kZWxheTogLTJzO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtNSAuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoMiksXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtNSAuaXRlbTpudGgtb2YtdHlwZSgyKSB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiA1cztcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiA1cztcbiAgYW5pbWF0aW9uLWRlbGF5OiA1cztcbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gLml0ZW1zLTUgLmNvbnRyb2wtYnV0dG9uOm50aC1vZi10eXBlKDMpLFxuLmNhcm91c2VsLXNlY3Rpb24gLml0ZW1zLTUgLml0ZW06bnRoLW9mLXR5cGUoMykge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogMTJzO1xuICAtby1hbmltYXRpb24tZGVsYXk6IDEycztcbiAgYW5pbWF0aW9uLWRlbGF5OiAxMnM7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy01IC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSg0KSxcbi5jYXJvdXNlbC1zZWN0aW9uIC5pdGVtcy01IC5pdGVtOm50aC1vZi10eXBlKDQpIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDE5cztcbiAgLW8tYW5pbWF0aW9uLWRlbGF5OiAxOXM7XG4gIGFuaW1hdGlvbi1kZWxheTogMTlzO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtNSAuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoNSksXG4uY2Fyb3VzZWwtc2VjdGlvbiAuaXRlbXMtNSAuaXRlbTpudGgtb2YtdHlwZSg1KSB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAyNnM7XG4gIC1vLWFuaW1hdGlvbi1kZWxheTogMjZzO1xuICBhbmltYXRpb24tZGVsYXk6IDI2cztcbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gLmdhbGxlcnkgLmNvbnRyb2wtYnV0dG9uIHtcbiAgY29sb3I6ICNjY2M7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLWJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHVybCguLi9pbWcvRWxsaXBzZS0yLWNvcHktMi5wbmcpIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDEwJTtcbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gLmdhbGxlcnkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5pdGVtIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nLXRvcDogNDhweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY2Fyb3VzZWwtc2VjdGlvbiAuZ2FsbGVyeSAuaXRlbSAucXVvdGUge1xuICBmb250LXNpemU6IDEuMDYyNXJlbTtcbiAgY29sb3I6ICMzYTQyNDY7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW46IDE5cHggOTNweCAwIDgxcHg7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5pdGVtIC5hdXRob3Ige1xuICBmb250LXNpemU6IDAuOTM3NXJlbTtcbiAgY29sb3I6ICMxNTk5YTc7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXdlaWdodDogMzAwO1xuICBtYXJnaW46IDEwcHggMCAzMnB4IDA7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9scyB7XG4gIGJvdHRvbTogMDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5jYXJvdXNlbC1zZWN0aW9uIC5nYWxsZXJ5IC5jb250cm9sLWJ1dHRvbiB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9jb250cm9sLWJ1dHRvbi5wbmdcIikgbm8tcmVwZWF0O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogM2VtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmNhcm91c2VsLXNlY3Rpb24gZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKlxuICBFTkQgQ0FST1VTRUwtU0VDVElPTlxuKi9cbmh0bWwge1xuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qINCd0YPQttC90L4g0LTQu9GPIEZpcmVmb3ggKi9cbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiDQndGD0LbQvdC+INC00LvRjyDQvNC+0LHQuNC70YzQvdC+0LPQviBXZWJLaXQgKi9cbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zaXplOiAxMDAlO1xufVxuXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBiYWNrZ3JvdW5kOiAjZmVmZWZlIHVybChcIi4uL2ltZy9iYWNrZ3JvdW5kLnBuZ1wiKSBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBjb2xvcjogIzBhMGEwYTtcbn1cblxuaW1nIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgLW1zLWludGVycG9sYXRpb24tbW9kZTogYmljdWJpYztcbn1cblxudGV4dGFyZWEge1xuICBoZWlnaHQ6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IDUwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59XG5cbnNlbGVjdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG4ubWFwX2NhbnZhcyBpbWcsXG4ubWFwX2NhbnZhcyBlbWJlZCxcbi5tYXBfY2FudmFzIG9iamVjdCxcbi5tcWEtZGlzcGxheSBpbWcsXG4ubXFhLWRpc3BsYXkgZW1iZWQsXG4ubXFhLWRpc3BsYXkgb2JqZWN0IHtcbiAgbWF4LXdpZHRoOiBub25lICFpbXBvcnRhbnQ7XG59XG5cbmJ1dHRvbiB7XG4gIHBhZGRpbmc6IDA7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG4uaXMtdmlzaWJsZSB7XG4gIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG59XG5cbi5pcy1oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5jb250YWluZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiA4MjRweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogNDAwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ4MXB4KSBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA3NDhweDtcbiAgfVxufVxuIiwiLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgIE5vcm1hbGl6ZS5zY3NzIHNldHRpbmdzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBJbmNsdWRlcyBsZWdhY3kgYnJvd3NlciBzdXBwb3J0IElFNi83XG4gKlxuICogU2V0IHRvIGZhbHNlIGlmIHlvdSB3YW50IHRvIGRyb3Agc3VwcG9ydCBmb3IgSUU2IGFuZCBJRTdcbiAqL1xuXG4kbGVnYWN5X2Jyb3dzZXJfc3VwcG9ydDogZmFsc2UgIWRlZmF1bHQ7XG5cbi8qIEJhc2VcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIGFuZCBJRSB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIGRldmljZSBvcmllbnRhdGlvbiBjaGFuZ2UsXG4gKiAgICB3aXRob3V0IGRpc2FibGluZyB1c2VyIHpvb20uXG4gKiAzLiBDb3JyZWN0cyB0ZXh0IHJlc2l6aW5nIG9kZGx5IGluIElFIDYvNyB3aGVuIGJvZHkgYGZvbnQtc2l6ZWAgaXMgc2V0IHVzaW5nXG4gKiAgYGVtYCB1bml0cy5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIEBpZiAkbGVnYWN5X2Jyb3dzZXJfc3VwcG9ydCB7XG4gICAgKmZvbnQtc2l6ZTogMTAwJTsgLyogMyAqL1xuICB9XG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDYvNy84LzkgYW5kIEZpcmVmb3ggMy5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG4gIEBpZiAkbGVnYWN5X2Jyb3dzZXJfc3VwcG9ydCB7XG4gICAgKmRpc3BsYXk6IGlubGluZTtcbiAgICAqem9vbTogMTtcbiAgfVxufVxuXG4vKipcbiAqIFByZXZlbnRzIG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSBvZiBmb2N1c2VkIGVsZW1lbnRzIHdoZW4gdGhleSBhcmUgYWxzbyBpbiBhblxuICogYWN0aXZlL2hvdmVyIHN0YXRlLlxuICovXG5cbmEge1xuICAmOmFjdGl2ZSwgJjpob3ZlciB7XG4gICAgb3V0bGluZTogMDtcbiAgfTtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5AaWYgJGxlZ2FjeV9icm93c2VyX3N1cHBvcnQge1xuICBibG9ja3F1b3RlIHtcbiAgICBtYXJnaW46IDFlbSA0MHB4O1xuICB9XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuQGlmICRsZWdhY3lfYnJvd3Nlcl9zdXBwb3J0IHtcbiAgaDIge1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgbWFyZ2luOiAwLjgzZW0gMDtcbiAgfVxuXG4gIGgzIHtcbiAgICBmb250LXNpemU6IDEuMTdlbTtcbiAgICBtYXJnaW46IDFlbSAwO1xuICB9XG5cbiAgaDQge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIG1hcmdpbjogMS4zM2VtIDA7XG4gIH1cblxuICBoNSB7XG4gICAgZm9udC1zaXplOiAwLjgzZW07XG4gICAgbWFyZ2luOiAxLjY3ZW0gMDtcbiAgfVxuXG4gIGg2IHtcbiAgICBmb250LXNpemU6IDAuNjdlbTtcbiAgICBtYXJnaW46IDIuMzNlbSAwO1xuICB9XG59XG5cbi8qKlxuICogQWRkcmVzc2VzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuQGlmICRsZWdhY3lfYnJvd3Nlcl9zdXBwb3J0IHtcblxuICAvKipcbiAgICogQWRkcmVzc2VzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIElFIDYvNy5cbiAgICovXG5cbiAgcCxcbiAgcHJlIHtcbiAgICAqbWFyZ2luOiAxZW0gMDtcbiAgfVxuXG4gIC8qXG4gICAqIEFkZHJlc3NlcyBDU1MgcXVvdGVzIG5vdCBzdXBwb3J0ZWQgaW4gSUUgNi83LlxuICAgKi9cblxuICBxIHtcbiAgICAqcXVvdGVzOiBub25lO1xuICB9XG5cbiAgLypcbiAgICogQWRkcmVzc2VzIGBxdW90ZXNgIHByb3BlcnR5IG5vdCBzdXBwb3J0ZWQgaW4gU2FmYXJpIDQuXG4gICAqL1xuXG4gIHE6YmVmb3JlLFxuICBxOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBjb250ZW50OiBub25lO1xuICB9XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuQGlmICRsZWdhY3lfYnJvd3Nlcl9zdXBwb3J0IHtcblxuICAvKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICBMaXN0c1xuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIC8qXG4gICAqIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRSA2LzcuXG4gICAqL1xuXG4gIGRsLFxuICBtZW51LFxuICBvbCxcbiAgdWwge1xuICAgICptYXJnaW46IDFlbSAwO1xuICB9XG5cbiAgZGQge1xuICAgICptYXJnaW46IDAgMCAwIDQwcHg7XG4gIH1cblxuICAvKlxuICAgKiBBZGRyZXNzZXMgcGFkZGluZ3Mgc2V0IGRpZmZlcmVudGx5IGluIElFIDYvNy5cbiAgICovXG5cbiAgbWVudSxcbiAgb2wsXG4gIHVsIHtcbiAgICAqcGFkZGluZzogMCAwIDAgNDBweDtcbiAgfVxuXG4gIC8qXG4gICAqIENvcnJlY3RzIGxpc3QgaW1hZ2VzIGhhbmRsZWQgaW5jb3JyZWN0bHkgaW4gSUUgNy5cbiAgICovXG5cbiAgbmF2IHVsLFxuICBuYXYgb2wge1xuICAgICpsaXN0LXN0eWxlOiBub25lO1xuICAgICpsaXN0LXN0eWxlLWltYWdlOiBub25lO1xuICB9XG5cbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqIDIuIEltcHJvdmVzIGltYWdlIHF1YWxpdHkgd2hlbiBzY2FsZWQgaW4gSUUgNy5cbiAqL1xuXG5pbWcge1xuICBib3JkZXI6IDA7XG4gIEBpZiAkbGVnYWN5X2Jyb3dzZXJfc3VwcG9ydCB7XG4gICAgKi1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7IC8qIDIgKi9cbiAgfVxufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICogQ29ycmVjdCBmb250IGZhbWlseSBzZXQgb2RkbHkgaW4gSUUgNiwgU2FmYXJpIDQvNSwgYW5kIENocm9tZS5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgQGlmICRsZWdhY3lfYnJvd3Nlcl9zdXBwb3J0IHtcbiAgICBfZm9udC1mYW1pbHk6ICdjb3VyaWVyIG5ldycsIG1vbm9zcGFjZTtcbiAgfVxuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqIDQuIEltcHJvdmVzIGFwcGVhcmFuY2UgYW5kIGNvbnNpc3RlbmN5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xuICBAaWYgJGxlZ2FjeV9icm93c2VyX3N1cHBvcnQge1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMyAqL1xuICAgICp2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAvKiAzICovXG4gIH1cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKiA0LiBSZW1vdmVzIGlubmVyIHNwYWNpbmcgaW4gSUUgNyB3aXRob3V0IGFmZmVjdGluZyBub3JtYWwgdGV4dCBpbnB1dHMuXG4gKiAgS25vd24gaXNzdWU6IGlubmVyIHNwYWNpbmcgcmVtYWlucyBpbiBJRSA2LlxuICovXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xuICBAaWYgJGxlZ2FjeV9icm93c2VyX3N1cHBvcnQge1xuICAgICpvdmVyZmxvdzogdmlzaWJsZTsgIC8qIDQgKi9cbiAgfVxufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cblxuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKiAgS25vd24gaXNzdWU6IGV4Y2VzcyBwYWRkaW5nIHJlbWFpbnMgaW4gSUUgNi5cbiAqL1xuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbiAgQGlmICRsZWdhY3lfYnJvd3Nlcl9zdXBwb3J0IHtcbiAgICAqaGVpZ2h0OiAxM3B4OyAvKiAzICovXG4gICAgKndpZHRoOiAxM3B4OyAvKiAzICovXG4gIH1cbn1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqIDMuIENvcnJlY3RzIHRleHQgbm90IHdyYXBwaW5nIGluIEZpcmVmb3ggMy5cbiAqIDQuIENvcnJlY3RzIGFsaWdubWVudCBkaXNwbGF5ZWQgb2RkbHkgaW4gSUUgNi83LlxuICovXG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG4gIEBpZiAkbGVnYWN5X2Jyb3dzZXJfc3VwcG9ydCB7XG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMyAqL1xuICAgICptYXJnaW4tbGVmdDogLTdweDsgLyogNCAqL1xuICB9XG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG59IiwiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1EYW5jaW5nK1NjcmlwdHxSb2JvdG86MzAwLDQwMCw0MDBpLDUwMCcpOyIsIi8qXG4gIEhFQURFUiBTRUNUSU9OXG4qL1xuXG4uaGVhZGVyIHtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgLm1lbnUge1xuICAgIEBpbmNsdWRlIGFsaWduLWl0ZW1zKGNlbnRlcik7XG4gICAgQGluY2x1ZGUgZmxleC1kaXJlY3Rpb24ocm93KTtcbiAgICBAaW5jbHVkZSBmbGV4Ym94O1xuICAgIEBpbmNsdWRlIGp1c3RpZnktY29udGVudChmbGV4LWVuZCk7XG5cbiAgICAubmF2IHtcbiAgICAgIEBpbmNsdWRlIGZsZXgtZGlyZWN0aW9uKHJvdyk7XG4gICAgICBAaW5jbHVkZSBmbGV4Ym94O1xuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgIHBhZGRpbmctdG9wOiAxOXB4O1xuXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgQGluY2x1ZGUgYWxpZ24taXRlbXMoY2VudGVyKTtcbiAgICAgICAgQGluY2x1ZGUgZmxleC1kaXJlY3Rpb24oY29sdW1uKTtcbiAgICAgICAgQGluY2x1ZGUgZmxleGJveDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA0ODFweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIEBpbmNsdWRlIGFsaWduLWl0ZW1zKGNlbnRlcik7XG4gICAgICAgIEBpbmNsdWRlIGZsZXgtZGlyZWN0aW9uKHJvdyk7XG4gICAgICAgIEBpbmNsdWRlIGp1c3RpZnktY29udGVudChjZW50ZXIpO1xuICAgICAgICBAaW5jbHVkZSBmbGV4Ym94O1xuICAgICAgICBwYWRkaW5nLXRvcDogMTlweDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH1cbiAgICAgICAgXG4gICAgICAuaXRlbSB7XG4gICAgICAgIG1hcmdpbjogMCAyMHB4IDAgMTdweDtcblxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgICBtYXJnaW46IDVweCAwIDVweCAwO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG5cbiAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDEzcHg7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuXG4gICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAubGluayB7XG4gICAgICAgICAgQGluY2x1ZGUgIGZvbnQtc2l6ZSgxNi41cHgpO1xuICAgICAgICAgIGNvbG9yOiAjM2E0MjQ2O1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgICAgICAgICBmb250LXNpemU6IDE2LjVweDtcbiAgICAgICAgICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLmxpbmstYWN0aXZlIHtcbiAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLypcbiAgRU5EIEhFQURFUiBTRUNUSU9OXG4qLyIsIi8vIEZsZXhib3ggTWl4aW5zXG4vLyBodHRwOi8vcGhpbGlwd2FsdG9uLmdpdGh1Yi5pby9zb2x2ZWQtYnktZmxleGJveC9cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9waGlsaXB3YWx0b24vc29sdmVkLWJ5LWZsZXhib3hcbi8vIFxuLy8gQ29weXJpZ2h0IChjKSAyMDEzIEJyaWFuIEZyYW5jb1xuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0b1xuLy8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvXG4vLyB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuXG4vLyBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWVxuLy8gQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCxcbi8vIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFXG4vLyBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cbi8vXG4vLyBUaGlzIGlzIGEgc2V0IG9mIG1peGlucyBmb3IgdGhvc2Ugd2hvIHdhbnQgdG8gbWVzcyBhcm91bmQgd2l0aCBmbGV4Ym94XG4vLyB1c2luZyB0aGUgbmF0aXZlIHN1cHBvcnQgb2YgY3VycmVudCBicm93c2Vycy4gRm9yIGZ1bGwgc3VwcG9ydCB0YWJsZVxuLy8gY2hlY2s6IGh0dHA6Ly9jYW5pdXNlLmNvbS9mbGV4Ym94XG4vL1xuLy8gQmFzaWNhbGx5IHRoaXMgd2lsbCB1c2U6XG4vL1xuLy8gKiBGYWxsYmFjaywgb2xkIHN5bnRheCAoSUUxMCwgbW9iaWxlIHdlYmtpdCBicm93c2VycyAtIG5vIHdyYXBwaW5nKVxuLy8gKiBGaW5hbCBzdGFuZGFyZHMgc3ludGF4IChGRiwgU2FmYXJpLCBDaHJvbWUsIElFMTEsIE9wZXJhKVxuLy9cbi8vIFRoaXMgd2FzIGluc3BpcmVkIGJ5OlxuLy8gXG4vLyAqIGh0dHA6Ly9kZXYub3BlcmEuY29tL2FydGljbGVzL3ZpZXcvYWR2YW5jZWQtY3Jvc3MtYnJvd3Nlci1mbGV4Ym94L1xuLy8gXG4vLyBXaXRoIGhlbHAgZnJvbTpcbi8vIFxuLy8gKiBodHRwOi8vdzMub3JnL3RyL2NzczMtZmxleGJveC9cbi8vICogaHR0cDovL3RoZS1lY2hvcGxleC5uZXQvZmxleHlib3hlcy9cbi8vICogaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2hoNzcyMDY5KHY9dnMuODUpLmFzcHhcbi8vICogaHR0cDovL2Nzcy10cmlja3MuY29tL3VzaW5nLWZsZXhib3gvXG4vLyAqIGh0dHA6Ly9kZXYub3BlcmEuY29tL2FydGljbGVzL3ZpZXcvYWR2YW5jZWQtY3Jvc3MtYnJvd3Nlci1mbGV4Ym94L1xuLy8gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi11cy9kb2NzL3dlYi9ndWlkZS9jc3MvZmxleGlibGVfYm94ZXNcblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXhib3ggQ29udGFpbmVyc1xuLy9cbi8vIFRoZSAnZmxleCcgdmFsdWUgY2F1c2VzIGFuIGVsZW1lbnQgdG8gZ2VuZXJhdGUgYSBibG9jay1sZXZlbCBmbGV4XG4vLyBjb250YWluZXIgYm94LlxuLy9cbi8vIFRoZSAnaW5saW5lLWZsZXgnIHZhbHVlIGNhdXNlcyBhbiBlbGVtZW50IHRvIGdlbmVyYXRlIGEgaW5saW5lLWxldmVsXG4vLyBmbGV4IGNvbnRhaW5lciBib3guIFxuLy9cbi8vIGRpc3BsYXk6IGZsZXggfCBpbmxpbmUtZmxleFxuLy9cbi8vIGh0dHA6Ly93My5vcmcvdHIvY3NzMy1mbGV4Ym94LyNmbGV4LWNvbnRhaW5lcnNcbi8vXG4vLyAoUGxhY2Vob2xkZXIgc2VsZWN0b3JzIGZvciBlYWNoIHR5cGUsIGZvciB0aG9zZSB3aG8gcmF0aGVyIEBleHRlbmQpXG5cbkBtaXhpbiBmbGV4Ym94IHtcblx0ZGlzcGxheTogLXdlYmtpdC1ib3g7XG5cdGRpc3BsYXk6IC13ZWJraXQtZmxleDtcblx0ZGlzcGxheTogLW1vei1mbGV4O1xuXHRkaXNwbGF5OiAtbXMtZmxleGJveDtcblx0ZGlzcGxheTogZmxleDtcbn1cblxuJWZsZXhib3ggeyBAaW5jbHVkZSBmbGV4Ym94OyB9XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AbWl4aW4gaW5saW5lLWZsZXgge1xuXHRkaXNwbGF5OiAtd2Via2l0LWlubGluZS1ib3g7XG5cdGRpc3BsYXk6IC13ZWJraXQtaW5saW5lLWZsZXg7XG5cdGRpc3BsYXk6IC1tb3otaW5saW5lLWZsZXg7XG5cdGRpc3BsYXk6IC1tcy1pbmxpbmUtZmxleGJveDtcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XG59XG5cbiVpbmxpbmUtZmxleCB7IEBpbmNsdWRlIGlubGluZS1mbGV4OyB9XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBGbGV4Ym94IERpcmVjdGlvblxuLy9cbi8vIFRoZSAnZmxleC1kaXJlY3Rpb24nIHByb3BlcnR5IHNwZWNpZmllcyBob3cgZmxleCBpdGVtcyBhcmUgcGxhY2VkIGluXG4vLyB0aGUgZmxleCBjb250YWluZXIsIGJ5IHNldHRpbmcgdGhlIGRpcmVjdGlvbiBvZiB0aGUgZmxleCBjb250YWluZXInc1xuLy8gbWFpbiBheGlzLiBUaGlzIGRldGVybWluZXMgdGhlIGRpcmVjdGlvbiB0aGF0IGZsZXggaXRlbXMgYXJlIGxhaWQgb3V0IGluLiBcbi8vXG4vLyBWYWx1ZXM6IHJvdyB8IHJvdy1yZXZlcnNlIHwgY29sdW1uIHwgY29sdW1uLXJldmVyc2Vcbi8vIERlZmF1bHQ6IHJvd1xuLy9cbi8vIGh0dHA6Ly93My5vcmcvdHIvY3NzMy1mbGV4Ym94LyNmbGV4LWRpcmVjdGlvbi1wcm9wZXJ0eVxuXG5AbWl4aW4gZmxleC1kaXJlY3Rpb24oJHZhbHVlOiByb3cpIHtcblx0QGlmICR2YWx1ZSA9PSByb3ctcmV2ZXJzZSB7XG5cdFx0LXdlYmtpdC1ib3gtZGlyZWN0aW9uOiByZXZlcnNlO1xuXHRcdC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcblx0fSBAZWxzZSBpZiAkdmFsdWUgPT0gY29sdW1uIHtcblx0XHQtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcblx0XHQtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuXHR9IEBlbHNlIGlmICR2YWx1ZSA9PSBjb2x1bW4tcmV2ZXJzZSB7XG5cdFx0LXdlYmtpdC1ib3gtZGlyZWN0aW9uOiByZXZlcnNlO1xuXHRcdC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG5cdH0gQGVsc2Uge1xuXHRcdC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuXHRcdC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcblx0fVxuXHQtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiAkdmFsdWU7XG5cdC1tb3otZmxleC1kaXJlY3Rpb246ICR2YWx1ZTtcblx0LW1zLWZsZXgtZGlyZWN0aW9uOiAkdmFsdWU7XG5cdGZsZXgtZGlyZWN0aW9uOiAkdmFsdWU7XG59XG5cdC8vIFNob3J0ZXIgdmVyc2lvbjpcblx0QG1peGluIGZsZXgtZGlyKCRhcmdzLi4uKSB7IEBpbmNsdWRlIGZsZXgtZGlyZWN0aW9uKCRhcmdzLi4uKTsgfVxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gRmxleGJveCBXcmFwXG4vL1xuLy8gVGhlICdmbGV4LXdyYXAnIHByb3BlcnR5IGNvbnRyb2xzIHdoZXRoZXIgdGhlIGZsZXggY29udGFpbmVyIGlzIHNpbmdsZS1saW5lXG4vLyBvciBtdWx0aS1saW5lLCBhbmQgdGhlIGRpcmVjdGlvbiBvZiB0aGUgY3Jvc3MtYXhpcywgd2hpY2ggZGV0ZXJtaW5lc1xuLy8gdGhlIGRpcmVjdGlvbiBuZXcgbGluZXMgYXJlIHN0YWNrZWQgaW4uIFxuLy9cbi8vIFZhbHVlczogbm93cmFwIHwgd3JhcCB8IHdyYXAtcmV2ZXJzZVxuLy8gRGVmYXVsdDogbm93cmFwXG4vL1xuLy8gaHR0cDovL3czLm9yZy90ci9jc3MzLWZsZXhib3gvI2ZsZXgtd3JhcC1wcm9wZXJ0eVxuXG5AbWl4aW4gZmxleC13cmFwKCR2YWx1ZTogbm93cmFwKSB7XG5cdC8vIE5vIFdlYmtpdCBCb3ggZmFsbGJhY2suXG5cdC13ZWJraXQtZmxleC13cmFwOiAkdmFsdWU7XG5cdC1tb3otZmxleC13cmFwOiAkdmFsdWU7XG5cdEBpZiAkdmFsdWUgPT0gbm93cmFwIHtcblx0XHQtbXMtZmxleC13cmFwOiBub25lO1xuXHR9IEBlbHNlIHsgXG5cdFx0LW1zLWZsZXgtd3JhcDogJHZhbHVlOyBcblx0fVxuXHRmbGV4LXdyYXA6ICR2YWx1ZTtcbn1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXhib3ggRmxvdyAoc2hvcnRoYW5kKVxuLy9cbi8vIFRoZSAnZmxleC1mbG93JyBwcm9wZXJ0eSBpcyBhIHNob3J0aGFuZCBmb3Igc2V0dGluZyB0aGUgJ2ZsZXgtZGlyZWN0aW9uJ1xuLy8gYW5kICdmbGV4LXdyYXAnIHByb3BlcnRpZXMsIHdoaWNoIHRvZ2V0aGVyIGRlZmluZSB0aGUgZmxleCBjb250YWluZXInc1xuLy8gbWFpbiBhbmQgY3Jvc3MgYXhlcy5cbi8vXG4vLyBWYWx1ZXM6IDxmbGV4LWRpcmVjdGlvbj4gfCA8ZmxleC13cmFwPiBcbi8vIERlZmF1bHQ6IHJvdyBub3dyYXBcbi8vXG4vLyBodHRwOi8vdzMub3JnL3RyL2NzczMtZmxleGJveC8jZmxleC1mbG93LXByb3BlcnR5XG5cbkBtaXhpbiBmbGV4LWZsb3coJHZhbHVlczogKHJvdyBub3dyYXApKSB7XG5cdC8vIE5vIFdlYmtpdCBCb3ggZmFsbGJhY2suXG5cdC13ZWJraXQtZmxleC1mbG93OiAkdmFsdWVzO1xuXHQtbW96LWZsZXgtZmxvdzogJHZhbHVlcztcblx0LW1zLWZsZXgtZmxvdzogJHZhbHVlcztcblx0ZmxleC1mbG93OiAkdmFsdWVzO1xufVxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gRmxleGJveCBPcmRlclxuLy9cbi8vIFRoZSAnb3JkZXInIHByb3BlcnR5IGNvbnRyb2xzIHRoZSBvcmRlciBpbiB3aGljaCBmbGV4IGl0ZW1zIGFwcGVhciB3aXRoaW5cbi8vIHRoZWlyIGZsZXggY29udGFpbmVyLCBieSBhc3NpZ25pbmcgdGhlbSB0byBvcmRpbmFsIGdyb3Vwcy5cbi8vXG4vLyBEZWZhdWx0OiAwXG4vL1xuLy8gaHR0cDovL3czLm9yZy90ci9jc3MzLWZsZXhib3gvI29yZGVyLXByb3BlcnR5XG5cbkBtaXhpbiBvcmRlcigkaW50OiAwKSB7XG5cdC13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXA6ICRpbnQgKyAxO1xuXHQtd2Via2l0LW9yZGVyOiAkaW50O1xuXHQtbW96LW9yZGVyOiAkaW50O1xuXHQtbXMtZmxleC1vcmRlcjogJGludDtcblx0b3JkZXI6ICRpbnQ7XG59XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBGbGV4Ym94IEdyb3dcbi8vXG4vLyBUaGUgJ2ZsZXgtZ3JvdycgcHJvcGVydHkgc2V0cyB0aGUgZmxleCBncm93IGZhY3Rvci4gTmVnYXRpdmUgbnVtYmVyc1xuLy8gYXJlIGludmFsaWQuXG4vL1xuLy8gRGVmYXVsdDogMFxuLy9cbi8vIGh0dHA6Ly93My5vcmcvdHIvY3NzMy1mbGV4Ym94LyNmbGV4LWdyb3ctcHJvcGVydHlcblxuQG1peGluIGZsZXgtZ3JvdygkaW50OiAwKSB7XG5cdC13ZWJraXQtYm94LWZsZXg6ICRpbnQ7XG5cdC13ZWJraXQtZmxleC1ncm93OiAkaW50O1xuXHQtbW96LWZsZXgtZ3JvdzogJGludDtcblx0LW1zLWZsZXgtcG9zaXRpdmU6ICRpbnQ7XG5cdGZsZXgtZ3JvdzogJGludDtcbn1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXhib3ggU2hyaW5rXG4vL1xuLy8gVGhlICdmbGV4LXNocmluaycgcHJvcGVydHkgc2V0cyB0aGUgZmxleCBzaHJpbmsgZmFjdG9yLiBOZWdhdGl2ZSBudW1iZXJzXG4vLyBhcmUgaW52YWxpZC5cbi8vXG4vLyBEZWZhdWx0OiAxXG4vL1xuLy8gaHR0cDovL3czLm9yZy90ci9jc3MzLWZsZXhib3gvI2ZsZXgtc2hyaW5rLXByb3BlcnR5XG5cbkBtaXhpbiBmbGV4LXNocmluaygkaW50OiAxKSB7XG5cdC13ZWJraXQtZmxleC1zaHJpbms6ICRpbnQ7XG5cdC1tb3otZmxleC1zaHJpbms6ICRpbnQ7XG5cdC1tcy1mbGV4LW5lZ2F0aXZlOiAkaW50O1xuXHRmbGV4LXNocmluazogJGludDtcbn1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXhib3ggQmFzaXNcbi8vXG4vLyBUaGUgJ2ZsZXgtYmFzaXMnIHByb3BlcnR5IHNldHMgdGhlIGZsZXggYmFzaXMuIE5lZ2F0aXZlIGxlbmd0aHMgYXJlIGludmFsaWQuIFxuLy9cbi8vIFZhbHVlczogTGlrZSBcIndpZHRoXCIgXG4vLyBEZWZhdWx0OiBhdXRvXG4vL1xuLy8gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1mbGV4Ym94LyNmbGV4LWJhc2lzLXByb3BlcnR5XG5cbkBtaXhpbiBmbGV4LWJhc2lzKCR2YWx1ZTogYXV0bykge1xuXHQtd2Via2l0LWZsZXgtYmFzaXM6ICR2YWx1ZTtcblx0LW1vei1mbGV4LWJhc2lzOiAkdmFsdWU7XG5cdC1tcy1mbGV4LXByZWZlcnJlZC1zaXplOiAkdmFsdWU7XG5cdGZsZXgtYmFzaXM6ICR2YWx1ZTtcbn1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXhib3ggXCJGbGV4XCIgKHNob3J0aGFuZClcbi8vXG4vLyBUaGUgJ2ZsZXgnIHByb3BlcnR5IHNwZWNpZmllcyB0aGUgY29tcG9uZW50cyBvZiBhIGZsZXhpYmxlIGxlbmd0aDogdGhlXG4vLyBmbGV4IGdyb3cgZmFjdG9yIGFuZCBmbGV4IHNocmluayBmYWN0b3IsIGFuZCB0aGUgZmxleCBiYXNpcy4gV2hlbiBhblxuLy8gZWxlbWVudCBpcyBhIGZsZXggaXRlbSwgJ2ZsZXgnIGlzIGNvbnN1bHRlZCBpbnN0ZWFkIG9mIHRoZSBtYWluIHNpemVcbi8vIHByb3BlcnR5IHRvIGRldGVybWluZSB0aGUgbWFpbiBzaXplIG9mIHRoZSBlbGVtZW50LiBJZiBhbiBlbGVtZW50IGlzXG4vLyBub3QgYSBmbGV4IGl0ZW0sICdmbGV4JyBoYXMgbm8gZWZmZWN0LlxuLy9cbi8vIFZhbHVlczogbm9uZSB8IDxmbGV4LWdyb3c+IDxmbGV4LXNocmluaz4gfHwgPGZsZXgtYmFzaXM+XG4vLyBEZWZhdWx0OiBTZWUgaW5kaXZpZHVhbCBwcm9wZXJ0aWVzICgxIDEgMCkuXG4vL1xuLy8gaHR0cDovL3czLm9yZy90ci9jc3MzLWZsZXhib3gvI2ZsZXgtcHJvcGVydHlcblxuQG1peGluIGZsZXgoJGZnOiAxLCAkZnM6IG51bGwsICRmYjogbnVsbCkge1xuICAgIFxuXHQvLyBTZXQgYSB2YXJpYWJsZSB0byBiZSB1c2VkIGJ5IGJveC1mbGV4IHByb3BlcnRpZXNcblx0JGZnLWJveGZsZXg6ICRmZztcblxuXHQvLyBCb3gtRmxleCBvbmx5IHN1cHBvcnRzIGEgZmxleC1ncm93IHZhbHVlIHNvIGxldCdzIGdyYWIgdGhlXG5cdC8vIGZpcnN0IGl0ZW0gaW4gdGhlIGxpc3QgYW5kIGp1c3QgcmV0dXJuIHRoYXQuXG5cdEBpZiB0eXBlLW9mKCRmZykgPT0gJ2xpc3QnIHtcblx0XHQkZmctYm94ZmxleDogbnRoKCRmZywgMSk7XG5cdH1cblxuXHQtd2Via2l0LWJveC1mbGV4OiAkZmctYm94ZmxleDtcblx0LXdlYmtpdC1mbGV4OiAkZmcgJGZzICRmYjtcblx0LW1vei1ib3gtZmxleDogJGZnLWJveGZsZXg7XG5cdC1tb3otZmxleDogJGZnICRmcyAkZmI7XG5cdC1tcy1mbGV4OiAkZmcgJGZzICRmYjtcblx0ZmxleDogJGZnICRmcyAkZmI7XG59XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBGbGV4Ym94IEp1c3RpZnkgQ29udGVudFxuLy9cbi8vIFRoZSAnanVzdGlmeS1jb250ZW50JyBwcm9wZXJ0eSBhbGlnbnMgZmxleCBpdGVtcyBhbG9uZyB0aGUgbWFpbiBheGlzXG4vLyBvZiB0aGUgY3VycmVudCBsaW5lIG9mIHRoZSBmbGV4IGNvbnRhaW5lci4gVGhpcyBpcyBkb25lIGFmdGVyIGFueSBmbGV4aWJsZVxuLy8gbGVuZ3RocyBhbmQgYW55IGF1dG8gbWFyZ2lucyBoYXZlIGJlZW4gcmVzb2x2ZWQuIFR5cGljYWxseSBpdCBoZWxwcyBkaXN0cmlidXRlXG4vLyBleHRyYSBmcmVlIHNwYWNlIGxlZnRvdmVyIHdoZW4gZWl0aGVyIGFsbCB0aGUgZmxleCBpdGVtcyBvbiBhIGxpbmUgYXJlXG4vLyBpbmZsZXhpYmxlLCBvciBhcmUgZmxleGlibGUgYnV0IGhhdmUgcmVhY2hlZCB0aGVpciBtYXhpbXVtIHNpemUuIEl0IGFsc29cbi8vIGV4ZXJ0cyBzb21lIGNvbnRyb2wgb3ZlciB0aGUgYWxpZ25tZW50IG9mIGl0ZW1zIHdoZW4gdGhleSBvdmVyZmxvdyB0aGUgbGluZS5cbi8vXG4vLyBOb3RlOiAnc3BhY2UtKicgdmFsdWVzIG5vdCBzdXBwb3J0ZWQgaW4gb2xkZXIgc3ludGF4ZXMuXG4vL1xuLy8gVmFsdWVzOiBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBzcGFjZS1iZXR3ZWVuIHwgc3BhY2UtYXJvdW5kXG4vLyBEZWZhdWx0OiBmbGV4LXN0YXJ0XG4vL1xuLy8gaHR0cDovL3czLm9yZy90ci9jc3MzLWZsZXhib3gvI2p1c3RpZnktY29udGVudC1wcm9wZXJ0eVxuXG5AbWl4aW4ganVzdGlmeS1jb250ZW50KCR2YWx1ZTogZmxleC1zdGFydCkge1xuXHRAaWYgJHZhbHVlID09IGZsZXgtc3RhcnQge1xuXHRcdC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuXHRcdC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuXHR9IEBlbHNlIGlmICR2YWx1ZSA9PSBmbGV4LWVuZCB7XG5cdFx0LXdlYmtpdC1ib3gtcGFjazogZW5kO1xuXHRcdC1tcy1mbGV4LXBhY2s6IGVuZDtcblx0fSBAZWxzZSBpZiAkdmFsdWUgPT0gc3BhY2UtYmV0d2VlbiB7XG5cdFx0LXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcblx0XHQtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuXHR9IEBlbHNlIGlmICR2YWx1ZSA9PSBzcGFjZS1hcm91bmQge1xuXHRcdC1tcy1mbGV4LXBhY2s6IGRpc3RyaWJ1dGU7XHRcdFxuXHR9IEBlbHNlIHtcblx0XHQtd2Via2l0LWJveC1wYWNrOiAkdmFsdWU7XG5cdFx0LW1zLWZsZXgtcGFjazogJHZhbHVlO1xuXHR9XG5cdC13ZWJraXQtanVzdGlmeS1jb250ZW50OiAkdmFsdWU7XG5cdC1tb3otanVzdGlmeS1jb250ZW50OiAkdmFsdWU7XG5cdGp1c3RpZnktY29udGVudDogJHZhbHVlO1xufVxuXHQvLyBTaG9ydGVyIHZlcnNpb246XG5cdEBtaXhpbiBmbGV4LWp1c3QoJGFyZ3MuLi4pIHsgQGluY2x1ZGUganVzdGlmeS1jb250ZW50KCRhcmdzLi4uKTsgfVxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gRmxleGJveCBBbGlnbiBJdGVtc1xuLy9cbi8vIEZsZXggaXRlbXMgY2FuIGJlIGFsaWduZWQgaW4gdGhlIGNyb3NzIGF4aXMgb2YgdGhlIGN1cnJlbnQgbGluZSBvZiB0aGVcbi8vIGZsZXggY29udGFpbmVyLCBzaW1pbGFyIHRvICdqdXN0aWZ5LWNvbnRlbnQnIGJ1dCBpbiB0aGUgcGVycGVuZGljdWxhclxuLy8gZGlyZWN0aW9uLiAnYWxpZ24taXRlbXMnIHNldHMgdGhlIGRlZmF1bHQgYWxpZ25tZW50IGZvciBhbGwgb2YgdGhlIGZsZXhcbi8vIGNvbnRhaW5lcidzIGl0ZW1zLCBpbmNsdWRpbmcgYW5vbnltb3VzIGZsZXggaXRlbXMuICdhbGlnbi1zZWxmJyBhbGxvd3Ncbi8vIHRoaXMgZGVmYXVsdCBhbGlnbm1lbnQgdG8gYmUgb3ZlcnJpZGRlbiBmb3IgaW5kaXZpZHVhbCBmbGV4IGl0ZW1zLiAoRm9yXG4vLyBhbm9ueW1vdXMgZmxleCBpdGVtcywgJ2FsaWduLXNlbGYnIGFsd2F5cyBtYXRjaGVzIHRoZSB2YWx1ZSBvZiAnYWxpZ24taXRlbXMnXG4vLyBvbiB0aGVpciBhc3NvY2lhdGVkIGZsZXggY29udGFpbmVyLikgXG4vL1xuLy8gVmFsdWVzOiBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBiYXNlbGluZSB8IHN0cmV0Y2hcbi8vIERlZmF1bHQ6IHN0cmV0Y2hcbi8vXG4vLyBodHRwOi8vdzMub3JnL3RyL2NzczMtZmxleGJveC8jYWxpZ24taXRlbXMtcHJvcGVydHlcblxuQG1peGluIGFsaWduLWl0ZW1zKCR2YWx1ZTogc3RyZXRjaCkge1xuXHRAaWYgJHZhbHVlID09IGZsZXgtc3RhcnQge1xuXHRcdC13ZWJraXQtYm94LWFsaWduOiBzdGFydDtcblx0XHQtbXMtZmxleC1hbGlnbjogc3RhcnQ7XG5cdH0gQGVsc2UgaWYgJHZhbHVlID09IGZsZXgtZW5kIHtcblx0XHQtd2Via2l0LWJveC1hbGlnbjogZW5kO1xuXHRcdC1tcy1mbGV4LWFsaWduOiBlbmQ7XG5cdH0gQGVsc2Uge1xuXHRcdC13ZWJraXQtYm94LWFsaWduOiAkdmFsdWU7XG5cdFx0LW1zLWZsZXgtYWxpZ246ICR2YWx1ZTtcblx0fVxuXHQtd2Via2l0LWFsaWduLWl0ZW1zOiAkdmFsdWU7XG5cdC1tb3otYWxpZ24taXRlbXM6ICR2YWx1ZTtcblx0YWxpZ24taXRlbXM6ICR2YWx1ZTtcbn1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEZsZXhib3ggQWxpZ24gU2VsZlxuLy9cbi8vIFZhbHVlczogYXV0byB8IGZsZXgtc3RhcnQgfCBmbGV4LWVuZCB8IGNlbnRlciB8IGJhc2VsaW5lIHwgc3RyZXRjaFxuLy8gRGVmYXVsdDogYXV0b1xuXG5AbWl4aW4gYWxpZ24tc2VsZigkdmFsdWU6IGF1dG8pIHtcblx0Ly8gTm8gV2Via2l0IEJveCBGYWxsYmFjay5cblx0LXdlYmtpdC1hbGlnbi1zZWxmOiAkdmFsdWU7XG5cdC1tb3otYWxpZ24tc2VsZjogJHZhbHVlO1xuXHRAaWYgJHZhbHVlID09IGZsZXgtc3RhcnQge1xuXHRcdC1tcy1mbGV4LWl0ZW0tYWxpZ246IHN0YXJ0O1xuXHR9IEBlbHNlIGlmICR2YWx1ZSA9PSBmbGV4LWVuZCB7XG5cdFx0LW1zLWZsZXgtaXRlbS1hbGlnbjogZW5kO1xuXHR9IEBlbHNlIHtcblx0XHQtbXMtZmxleC1pdGVtLWFsaWduOiAkdmFsdWU7XG5cdH1cblx0YWxpZ24tc2VsZjogJHZhbHVlO1xufVxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gRmxleGJveCBBbGlnbiBDb250ZW50XG4vL1xuLy8gVGhlICdhbGlnbi1jb250ZW50JyBwcm9wZXJ0eSBhbGlnbnMgYSBmbGV4IGNvbnRhaW5lcidzIGxpbmVzIHdpdGhpbiB0aGVcbi8vIGZsZXggY29udGFpbmVyIHdoZW4gdGhlcmUgaXMgZXh0cmEgc3BhY2UgaW4gdGhlIGNyb3NzLWF4aXMsIHNpbWlsYXIgdG9cbi8vIGhvdyAnanVzdGlmeS1jb250ZW50JyBhbGlnbnMgaW5kaXZpZHVhbCBpdGVtcyB3aXRoaW4gdGhlIG1haW4tYXhpcy4gTm90ZSxcbi8vIHRoaXMgcHJvcGVydHkgaGFzIG5vIGVmZmVjdCB3aGVuIHRoZSBmbGV4Ym94IGhhcyBvbmx5IGEgc2luZ2xlIGxpbmUuXG4vL1xuLy8gVmFsdWVzOiBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBzcGFjZS1iZXR3ZWVuIHwgc3BhY2UtYXJvdW5kIHwgc3RyZXRjaFxuLy8gRGVmYXVsdDogc3RyZXRjaFxuLy9cbi8vIGh0dHA6Ly93My5vcmcvdHIvY3NzMy1mbGV4Ym94LyNhbGlnbi1jb250ZW50LXByb3BlcnR5XG5cbkBtaXhpbiBhbGlnbi1jb250ZW50KCR2YWx1ZTogc3RyZXRjaCkge1xuXHQvLyBObyBXZWJraXQgQm94IEZhbGxiYWNrLlxuXHQtd2Via2l0LWFsaWduLWNvbnRlbnQ6ICR2YWx1ZTtcblx0LW1vei1hbGlnbi1jb250ZW50OiAkdmFsdWU7XG5cdEBpZiAkdmFsdWUgPT0gZmxleC1zdGFydCB7XG5cdFx0LW1zLWZsZXgtbGluZS1wYWNrOiBzdGFydDtcblx0fSBAZWxzZSBpZiAkdmFsdWUgPT0gZmxleC1lbmQge1xuXHRcdC1tcy1mbGV4LWxpbmUtcGFjazogZW5kO1xuXHR9IEBlbHNlIHtcblx0XHQtbXMtZmxleC1saW5lLXBhY2s6ICR2YWx1ZTtcblx0fVxuXHRhbGlnbi1jb250ZW50OiAkdmFsdWU7XG59XG4iLCJAbWl4aW4gY2xlYXJmaXgge1xuICAmOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG5cbkBtaXhpbiBmb250LXNpemUoJGZvbnQtc2l6ZSl7XG4gICAgZm9udC1zaXplOiAoJGZvbnQtc2l6ZS8xNnB4KSoxcmVtO1xufSIsIi8vIFZhcmlhYmxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGxpZ2h0LWdyYXk6ICNlNmU2ZTY7XG4kbWVkaXVtLWdyYXk6ICNjYWNhY2E7XG4kZGFyay1ncmF5OiAjOGE4YThhO1xuJGJsYWNrOiAjMGEwYTBhO1xuJHdoaXRlOiAjZmVmZWZlOyIsIi8qXG4gIFRJVExFLVNFQ1RJT05cbiovXG5cbi50aXRsZS1zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDk4cHg7XG4gIHBhZGRpbmctdG9wOiAzNnB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gIH1cblxuICBoMSB7XG4gICAgQGluY2x1ZGUgIGZvbnQtc2l6ZSg4MHB4KTtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIGZvbnQtZmFtaWx5OiAnRGFuY2luZyBTY3JpcHQnLCBjdXJzaXZlO1xuICAgIGZvbnQtc2l6ZTogODBweDtcbiAgICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBtYXJnaW46IDAgMCAxMHB4IDA7XG4gIH1cblxuICBwIHtcbiAgICBAaW5jbHVkZSAgZm9udC1zaXplKDM0cHgpO1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMzRweDtcbiAgICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBtYXJnaW46IDAgMCAxNHB4IDA7XG4gIH1cblxuICAuYnRuIHtcbiAgICBAaW5jbHVkZSAgZm9udC1zaXplKDI0cHgpO1xuICAgIGJhY2tncm91bmQ6ICMwMDMzMzM7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIG1hcmdpbi10b3A6IDIycHg7XG4gICAgcGFkZGluZzogMTJweCAyMnB4O1xuICAgIFxuICAgICY6aG92ZXIge1xuICAgIH1cbiAgfVxufVxuXG4vKlxuICBFTkQgVElUTEUtU0VDVElPTlxuKi8iLCIvKlxuICBBUlRJQ0xFLVNFQ1RJT05cbiovXG5cbi5hcnRpY2xlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmctdG9wOiA2OXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gIH1cblxuICBoMyB7XG4gICAgQGluY2x1ZGUgIGZvbnQtc2l6ZSgzMi41cHgpO1xuICAgIGNvbG9yOiAjM2E0MjQ2O1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDMyLjVweDtcbiAgICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBtYXJnaW46IDAgMCAyMXB4IDE2cHg7XG4gIH1cblxuICBwIHtcbiAgICBAaW5jbHVkZSAgZm9udC1zaXplKDE5cHgpO1xuICAgIGNvbG9yOiAjM2E0MjQ2O1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE5cHg7XG4gICAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBtYXJnaW46IDAgMCA2MnB4IDI1cHg7XG4gIH1cbn1cblxuLypcbiAgRU5EIEFSVElDTEUtU0VDVElPTlxuKi9cbiIsIi8qXG4gIElORk8tU0VDVElPTlxuKi9cblxuLmluZm8tc2VjdGlvbiB7XG5cbiAgLmNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuXG4gICAgLmlzbGFuZC1iZyB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL3BpYy9pc2xhbmQtYmcucG5nJykgbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIGhlaWdodDogMTkycHg7XG4gICAgICBcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgICBoZWlnaHQ6IDE0MXB4O1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ5cHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICBoZWlnaHQ6IDE3NnB4O1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5kaXNoIHtcbiAgICAgIHBhZGRpbmctdG9wOiAyM3B4O1xuICAgIFxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAgIHBhZGRpbmc6IDEwcHggNXB4IDAgNXB4O1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ5cHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICBcbiAgICAgICAgcGFkZGluZy10b3A6IDMlcHg7XG4gICAgICB9XG5cbiAgICAgIC5pbWctZGlzaCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDlweDtcbiAgICAgICAgd2lkdGg6IDE4JTtcblxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cblxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ5cHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBwIHtcbiAgICAgICAgQGluY2x1ZGUgIGZvbnQtc2l6ZSgxNnB4KTtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgICAgIG1hcmdpbjogMCAwIDNweCAwO1xuXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDlweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHNwYW4ge1xuICAgICAgICBAaW5jbHVkZSAgZm9udC1zaXplKDE5cHgpO1xuICAgICAgICBmb250LXNpemU6IDE5cHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmhvdGVsLWJnIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnLi4vcGljL2hvdGVsLWJnLnBuZycpIG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICBoZWlnaHQ6IDE5MnB4O1xuICAgICAgXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgaGVpZ2h0OiAxNDFweDtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDU0OXB4KSBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgaGVpZ2h0OiAxNzZweDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAubW9udW1lbnQge1xuICAgICAgcGFkZGluZy10b3A6IDMzcHg7XG4gICAgIFxuXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgcGFkZGluZzogMTBweCA1cHggMCA1cHg7XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDlweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIFxuICAgICAgICBwYWRkaW5nLXRvcDogMyVweDtcbiAgICAgIH1cblxuICAgICAgLmltZy1tb251bWVudCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDlweDtcbiAgICAgICAgd2lkdGg6IDEyJTtcblxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cblxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNDgxcHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBwIHtcbiAgICAgICAgQGluY2x1ZGUgIGZvbnQtc2l6ZSgxNnB4KTtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgICAgIG1hcmdpbjogMCAwIDNweCAwO1xuXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA0ODFweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHNwYW4ge1xuICAgICAgICBAaW5jbHVkZSAgZm9udC1zaXplKDE5cHgpO1xuICAgICAgICBmb250LXNpemU6IDE5cHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLm1vdW50YWluLWJnIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnLi4vcGljL21vdW50YWluLWJnLnBuZycpIG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICBoZWlnaHQ6IDE5MnB4O1xuICAgICAgXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgaGVpZ2h0OiAxNDFweDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDU0OXB4KSBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgaGVpZ2h0OiAxNzZweDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuY2l0eS1iZyB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL3BpYy9jaXR5LWJnLnBuZycpIG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICBoZWlnaHQ6IDE5MnB4O1xuICAgICAgXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgaGVpZ2h0OiAxNDFweDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDU0OXB4KSBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgaGVpZ2h0OiAxNzZweDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAueWFjaHQtYmcge1xuICAgICAgYmFja2dyb3VuZDogdXJsKCcuLi9waWMveWFjaHQtYmcucG5nJykgbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIGhlaWdodDogMTkycHg7XG4gICAgICBwYWRkaW5nLXRvcDogMjMuMzElO1xuXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgaGVpZ2h0OiAxNDFweDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDU0OXB4KSBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgaGVpZ2h0OiAxNzZweDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIH1cblxuXG5cbiAgICB9XG5cbiAgICAuY29hc3QtYmcge1xuICAgICAgYmFja2dyb3VuZDogdXJsKCcuLi9waWMvY29hc3QtYmcucG5nJykgbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIGhlaWdodDogMTkycHg7XG4gICAgICBwYWRkaW5nLXRvcDogMjMuMjUlO1xuXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgaGVpZ2h0OiAxNDFweDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDU0OXB4KSBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgaGVpZ2h0OiAxNzZweDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIH1cblxuICAgIH1cblxuICAgIC5mbG93ZXIge1xuICAgICAgcGFkZGluZy10b3A6IDMzcHg7XG4gICAgICBoZWlnaHQ6IDIzLjI1JTtcblxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgICAgICBcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDU0OXB4KSBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgICB9XG5cbiAgICAgIC5pbWctZmxvd2VyIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTFweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gICAgICAgIHdpZHRoOiAxMyU7XG5cbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDQ4MXB4KSBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBwIHtcbiAgICAgICAgQGluY2x1ZGUgIGZvbnQtc2l6ZSgxNnB4KTtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgICAgIG1hcmdpbjogMHB4IDAgM3B4IDE4cHg7XG5cbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIH1cblxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNDgxcHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgIG1hcmdpbjogMHB4IDAgM3B4IDA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgc3BhbiB7XG4gICAgICAgIEBpbmNsdWRlICBmb250LXNpemUoMTlweCk7XG4gICAgICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuc3Bhbi10d28ge1xuXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNTQ4cHgpIHtcbiAgICAgICAgY29sb3I6ICMzYTQyNDY7XG4gICAgICAgIGZsZXg6IDEgMCBhdXRvO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHdpZHRoOiBjYWxjdWxhdGUtd2lkdGgoMik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLnNwYW4tdGhyZWUge1xuXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ5cHgpIHtcbiAgICAgICAgY29sb3I6ICMzYTQyNDY7XG4gICAgICAgIGZsZXg6IDEgMCBhdXRvO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHdpZHRoOiBjYWxjdWxhdGUtd2lkdGgoMyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qXG4gIEVORCBJTkZPLVNFQ1RJT05cbiovXG4iLCJAZnVuY3Rpb24gY2FsY3VsYXRlLXdpZHRoICgkY29sLXNwYW4pIHtcblxuICBAcmV0dXJuIDEwMCUgLyAkY29sLXNwYW5cblxufSIsIi8qXG4gIEZPT1RFUiBTRUNUSU9OXG4qL1xuXG4uZm9vdGVyIHtcbiAgLW1vei1maWx0ZXI6IGdyYXlzY2FsZSgxMDAlKTtcbiAgLW1zLWZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xuICAtby1maWx0ZXI6IGdyYXlzY2FsZSgxMDAlKTtcbiAgLXdlYmtpdC1maWx0ZXI6IGdyYXlzY2FsZSgxMDAlKTtcbiAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvYmFja2dyb3VuZC0yLnBuZycpIDUwJSA4OSUgbm8tcmVwZWF0O1xuICBmaWx0ZXI6IGdyYXk7IC8qIElFIDYtOSAqL1xuICBmaWx0ZXI6IGdyYXlzY2FsZSgxMDAlKTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiBcbiAgcCB7XG4gICAgQGluY2x1ZGUgIGZvbnQtc2l6ZSgyNHB4KTtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbWFyZ2luOiA0OXB4IDBweCAwcHggMjJweDtcbiAgfVxuXG4gIC5tZW51IHtcbiAgICBAaW5jbHVkZSBhbGlnbi1pdGVtcyhjZW50ZXIpO1xuICAgIEBpbmNsdWRlIGZsZXgtZGlyZWN0aW9uKHJvdyk7XG4gICAgQGluY2x1ZGUgZmxleGJveDtcbiAgICBAaW5jbHVkZSBqdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcblxuICAgIC5uYXYge1xuICAgICAgQGluY2x1ZGUgIGZvbnQtc2l6ZSgxOHB4KTtcbiAgICAgIEBpbmNsdWRlIGZsZXgtZGlyZWN0aW9uKHJvdyk7XG4gICAgICBAaW5jbHVkZSBmbGV4Ym94O1xuICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICBtYXJnaW46IDAgMCAzMHB4IDA7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICBwYWRkaW5nLXRvcDogMjJweDtcbiAgICAgICAgXG4gICAgICAuaXRlbSB7XG4gICAgICAgIG1hcmdpbjogMCA1cHggMCA1cHg7XG5cbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgICAgIH1cblxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5saW5rIHtcbiAgICAgICAgICBAaW5jbHVkZSAgZm9udC1zaXplKDE4cHgpO1xuICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgIC5saW5rLW5vLWFjdGl2ZSB7XG4gICAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuXG4gICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKlxuICBFTkQgRk9PVEVSIFNFQ1RJT05cbiovIiwiLypcbiAgQ0FST1VTRUwtU0VDVElPTlxuKi9cblxuLmNhcm91c2VsLXNlY3Rpb24ge1xuICBtYXJnaW4tYm90dG9tOiAyNnB4O1xuICBcbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoMSk6dGFyZ2V0IH4gLmNvbnRyb2xzIC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgxKSxcbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoMik6dGFyZ2V0IH4gLmNvbnRyb2xzIC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgyKSxcbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoMyk6dGFyZ2V0IH4gLmNvbnRyb2xzIC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgzKSxcbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoNCk6dGFyZ2V0IH4gLmNvbnRyb2xzIC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSg0KSxcbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoNSk6dGFyZ2V0IH4gLmNvbnRyb2xzIC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSg1KSB7XG4gICAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9jb250cm9sLWJ1dHRvbi1hY3RpdmUucG5nKSBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDEwJTtcbiAgfVxuXG4gIC5nYWxsZXJ5IC5pdGVtOmZpcnN0LW9mLXR5cGUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgcG9zaXRpb246IHN0YXRpYztcbiAgfVxuXG4gIC5nYWxsZXJ5IC5pdGVtIHtcbiAgICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IC41cztcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgLjVzO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBsZWZ0OiAwO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC41cztcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6dGFyZ2V0IH4gLml0ZW0ge1xuICAgIC1vLWFuaW1hdGlvbjogbm9uZTtcbiAgICAtd2Via2l0LWFuaW1hdGlvbjogbm9uZTtcbiAgICBhbmltYXRpb246IG5vbmU7XG4gICAgb3BhY2l0eTogMDtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgfVxuXG4gIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOnRhcmdldCB+IC5jb250cm9scyAuY29udHJvbC1idXR0b24ge1xuICAgIC1vLWFuaW1hdGlvbjogbm9uZTtcbiAgICAtd2Via2l0LWFuaW1hdGlvbjogbm9uZTtcbiAgICBhbmltYXRpb246IG5vbmU7XG4gIH1cblxuICBALXdlYmtpdC1rZXlmcmFtZXMgY29udHJvbEFuaW1hdGlvbi0yIHtcbiAgICAwJSB7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gICAgfVxuXG4gICAgMTQuMyUsIDUwJSB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICAgIH1cblxuICAgIDY0LjMlLCAxMDAlIHtcbiAgICAgIGNvbG9yOiAjY2NjO1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgICB9XG4gIH1cblxuICBALW8ta2V5ZnJhbWVzIGNvbnRyb2xBbmltYXRpb24tMiB7XG4gICAgMCUge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAgIH1cblxuICAgIDE0LjMlLCA1MCUge1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgICB9XG5cbiAgICA2NC4zJSwgMTAwJSB7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gICAgfVxuICB9XG5cbiAgQGtleWZyYW1lcyBjb250cm9sQW5pbWF0aW9uLTIge1xuICAgIDAlIHtcbiAgICAgIGNvbG9yOiAjY2NjO1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgICB9XG5cbiAgICAxNC4zJSwgNTAlIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgfVxuXG4gICAgNjQuMyUsIDEwMCUge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAgIH1cbiAgfVxuXG4gIEAtd2Via2l0LWtleWZyYW1lcyBnYWxsZXJ5QW5pbWF0aW9uLTIge1xuICAgIDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgMTQuMyUsIDUwJSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cblxuICAgIDY0LjMlLCAxMDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuICB9XG5cbiAgQC1vLWtleWZyYW1lcyBnYWxsZXJ5QW5pbWF0aW9uLTIge1xuICAgIDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgMTQuMyUsIDUwJSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cblxuICAgIDY0LjMlLCAxMDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuICB9XG5cbiAgQGtleWZyYW1lcyBnYWxsZXJ5QW5pbWF0aW9uLTIge1xuICAgIDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgMTQuMyUsIDUwJSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cblxuICAgIDY0LjMlLCAxMDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuICB9XG5cbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoMSk6dGFyZ2V0IH4gLml0ZW06bnRoLW9mLXR5cGUoMSkge1xuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICAuZ2FsbGVyeSAuY29udHJvbC1vcGVyYXRvcjpudGgtb2YtdHlwZSgyKTp0YXJnZXQgfiAuaXRlbTpudGgtb2YtdHlwZSgyKSB7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuXG4gIC5pdGVtcy0yLmF1dG9wbGF5IC5jb250cm9sLWJ1dHRvbiB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IGNvbnRyb2xBbmltYXRpb24tMiAxNHMgaW5maW5pdGU7XG4gICAgLW8tYW5pbWF0aW9uOiBjb250cm9sQW5pbWF0aW9uLTIgMTRzIGluZmluaXRlO1xuICAgIGFuaW1hdGlvbjogY29udHJvbEFuaW1hdGlvbi0yIDE0cyBpbmZpbml0ZTtcbiAgfVxuXG4gIC5pdGVtcy0yLmF1dG9wbGF5IC5pdGVtIHtcbiAgICAtd2Via2l0LWFuaW1hdGlvbjogZ2FsbGVyeUFuaW1hdGlvbi0yIDE0cyBpbmZpbml0ZTtcbiAgICAtby1hbmltYXRpb246IGdhbGxlcnlBbmltYXRpb24tMiAxNHMgaW5maW5pdGU7XG4gICAgYW5pbWF0aW9uOiBnYWxsZXJ5QW5pbWF0aW9uLTIgMTRzIGluZmluaXRlO1xuICB9XG5cbiAgLml0ZW1zLTIgLmNvbnRyb2wtYnV0dG9uOm50aC1vZi10eXBlKDEpLFxuICAuaXRlbXMtMiAuaXRlbTpudGgtb2YtdHlwZSgxKSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0ycztcbiAgICAtby1hbmltYXRpb24tZGVsYXk6IC0ycztcbiAgICBhbmltYXRpb24tZGVsYXk6IC0ycztcbiAgfVxuXG4gIC5pdGVtcy0yIC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgyKSxcbiAgLml0ZW1zLTIgLml0ZW06bnRoLW9mLXR5cGUoMikge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiA1cztcbiAgICAtby1hbmltYXRpb24tZGVsYXk6IDVzO1xuICAgIGFuaW1hdGlvbi1kZWxheTogNXM7XG4gIH1cblxuICBALXdlYmtpdC1rZXlmcmFtZXMgY29udHJvbEFuaW1hdGlvbi0zIHtcbiAgICAwJSB7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gICAgfVxuXG4gICAgOS41JSwgMzMuMyUge1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgICB9XG5cbiAgICA0Mi45JSwgMTAwJSB7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gICAgfVxuICB9XG5cbiAgQC1vLWtleWZyYW1lcyBjb250cm9sQW5pbWF0aW9uLTMge1xuICAgIDAlIHtcbiAgICAgIGNvbG9yOiAjY2NjO1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgICB9XG5cbiAgICA5LjUlLCAzMy4zJSB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICAgIH1cblxuICAgIDQyLjklLCAxMDAlIHtcbiAgICAgIGNvbG9yOiAjY2NjO1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTtcbiAgICB9XG4gIH1cblxuICBAa2V5ZnJhbWVzIGNvbnRyb2xBbmltYXRpb24tMyB7XG4gICAgMCUge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAgIH1cblxuICAgIDkuNSUsIDMzLjMlIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgfVxuXG4gICAgNDIuOSUsIDEwMCUge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAgIH1cbiAgfVxuXG4gIEAtd2Via2l0LWtleWZyYW1lcyBnYWxsZXJ5QW5pbWF0aW9uLTMge1xuICAgIDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgOS41JSwgMzMuMyUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG5cbiAgICA0Mi45JSwgMTAwJSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbiAgfVxuXG4gIEAtby1rZXlmcmFtZXMgZ2FsbGVyeUFuaW1hdGlvbi0zIHtcbiAgICAwJSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cblxuICAgIDkuNSUsIDMzLjMlIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuXG4gICAgNDIuOSUsIDEwMCUge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG4gIH1cblxuICBAa2V5ZnJhbWVzIGdhbGxlcnlBbmltYXRpb24tMyB7XG4gICAgMCUge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG5cbiAgICA5LjUlLCAzMy4zJSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cblxuICAgIDQyLjklLCAxMDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuICB9XG5cbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoMSk6dGFyZ2V0IH4gLml0ZW06bnRoLW9mLXR5cGUoMSkge1xuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICAuZ2FsbGVyeSAuY29udHJvbC1vcGVyYXRvcjpudGgtb2YtdHlwZSgyKTp0YXJnZXQgfiAuaXRlbTpudGgtb2YtdHlwZSgyKSB7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuXG4gIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDMpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDMpIHtcbiAgICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5cbiAgLml0ZW1zLTMuYXV0b3BsYXkgLmNvbnRyb2wtYnV0dG9uIHtcbiAgICAtd2Via2l0LWFuaW1hdGlvbjogY29udHJvbEFuaW1hdGlvbi0zIDIxcyBpbmZpbml0ZTtcbiAgICAtby1hbmltYXRpb246IGNvbnRyb2xBbmltYXRpb24tMyAyMXMgaW5maW5pdGU7XG4gICAgYW5pbWF0aW9uOiBjb250cm9sQW5pbWF0aW9uLTMgMjFzIGluZmluaXRlO1xuICB9XG5cbiAgLml0ZW1zLTMuYXV0b3BsYXkgLml0ZW0ge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBnYWxsZXJ5QW5pbWF0aW9uLTMgMjFzIGluZmluaXRlO1xuICAgIC1vLWFuaW1hdGlvbjogZ2FsbGVyeUFuaW1hdGlvbi0zIDIxcyBpbmZpbml0ZTtcbiAgICBhbmltYXRpb246IGdhbGxlcnlBbmltYXRpb24tMyAyMXMgaW5maW5pdGU7XG4gIH1cblxuICAuaXRlbXMtMyAuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoMSksXG4gIC5pdGVtcy0zIC5pdGVtOm50aC1vZi10eXBlKDEpIHtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTJzO1xuICAgIC1vLWFuaW1hdGlvbi1kZWxheTogLTJzO1xuICAgIGFuaW1hdGlvbi1kZWxheTogLTJzO1xuICB9XG5cbiAgLml0ZW1zLTMgLmNvbnRyb2wtYnV0dG9uOm50aC1vZi10eXBlKDIpLFxuICAuaXRlbXMtMyAuaXRlbTpudGgtb2YtdHlwZSgyKSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDVzO1xuICAgIC1vLWFuaW1hdGlvbi1kZWxheTogNXM7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiA1cztcbiAgfVxuXG4gIC5pdGVtcy0zIC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgzKSxcbiAgLml0ZW1zLTMgLml0ZW06bnRoLW9mLXR5cGUoMykge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAxMnM7XG4gICAgLW8tYW5pbWF0aW9uLWRlbGF5OiAxMnM7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAxMnM7XG4gIH1cblxuICBALXdlYmtpdC1rZXlmcmFtZXMgY29udHJvbEFuaW1hdGlvbi00IHtcbiAgICAwJSB7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gICAgfVxuXG4gICAgNy4xJSwgMjUlIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgfVxuXG4gICAgMzIuMSUsIDEwMCUge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAgIH1cbiAgfVxuXG4gIEAtby1rZXlmcmFtZXMgY29udHJvbEFuaW1hdGlvbi00IHtcbiAgICAwJSB7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gICAgfVxuXG4gICAgNy4xJSwgMjUlIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgfVxuXG4gICAgMzIuMSUsIDEwMCUge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAgIH1cbiAgfVxuXG4gIEBrZXlmcmFtZXMgY29udHJvbEFuaW1hdGlvbi00IHtcbiAgICAwJSB7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gICAgfVxuXG4gICAgNy4xJSwgMjUlIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgfVxuXG4gICAgMzIuMSUsIDEwMCUge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAgIH1cbiAgfVxuXG4gIEAtd2Via2l0LWtleWZyYW1lcyBnYWxsZXJ5QW5pbWF0aW9uLTQge1xuICAgIDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgNy4xJSwgMjUlIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuXG4gICAgMzIuMSUsIDEwMCUge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG4gIH1cblxuICBALW8ta2V5ZnJhbWVzIGdhbGxlcnlBbmltYXRpb24tNCB7XG4gICAgMCUge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG5cbiAgICA3LjElLCAyNSUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG5cbiAgICAzMi4xJSwgMTAwJSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbiAgfVxuXG4gIEBrZXlmcmFtZXMgZ2FsbGVyeUFuaW1hdGlvbi00IHtcbiAgICAwJSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cblxuICAgIDcuMSUsIDI1JSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cblxuICAgIDMyLjElLCAxMDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuICB9XG5cbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoMSk6dGFyZ2V0IH4gLml0ZW06bnRoLW9mLXR5cGUoMSkge1xuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICAuZ2FsbGVyeSAuY29udHJvbC1vcGVyYXRvcjpudGgtb2YtdHlwZSgyKTp0YXJnZXQgfiAuaXRlbTpudGgtb2YtdHlwZSgyKSB7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuXG4gIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDMpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDMpIHtcbiAgICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5cbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoNCk6dGFyZ2V0IH4gLml0ZW06bnRoLW9mLXR5cGUoNCkge1xuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICAuaXRlbXMtNC5hdXRvcGxheSAuY29udHJvbC1idXR0b24ge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBjb250cm9sQW5pbWF0aW9uLTQgMjhzIGluZmluaXRlO1xuICAgIC1vLWFuaW1hdGlvbjogY29udHJvbEFuaW1hdGlvbi00IDI4cyBpbmZpbml0ZTtcbiAgICBhbmltYXRpb246IGNvbnRyb2xBbmltYXRpb24tNCAyOHMgaW5maW5pdGU7XG4gIH1cblxuICAuaXRlbXMtNC5hdXRvcGxheSAuaXRlbSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IGdhbGxlcnlBbmltYXRpb24tNCAyOHMgaW5maW5pdGU7XG4gICAgLW8tYW5pbWF0aW9uOiBnYWxsZXJ5QW5pbWF0aW9uLTQgMjhzIGluZmluaXRlO1xuICAgIGFuaW1hdGlvbjogZ2FsbGVyeUFuaW1hdGlvbi00IDI4cyBpbmZpbml0ZTtcbiAgfVxuXG4gIC5pdGVtcy00IC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgxKSxcbiAgLml0ZW1zLTQgLml0ZW06bnRoLW9mLXR5cGUoMSkge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAtMnM7XG4gICAgLW8tYW5pbWF0aW9uLWRlbGF5OiAtMnM7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAtMnM7XG4gIH1cblxuICAuaXRlbXMtNCAuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoMiksXG4gIC5pdGVtcy00IC5pdGVtOm50aC1vZi10eXBlKDIpIHtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogNXM7XG4gICAgLW8tYW5pbWF0aW9uLWRlbGF5OiA1cztcbiAgICBhbmltYXRpb24tZGVsYXk6IDVzO1xuICB9XG5cbiAgLml0ZW1zLTQgLmNvbnRyb2wtYnV0dG9uOm50aC1vZi10eXBlKDMpLFxuICAuaXRlbXMtNCAuaXRlbTpudGgtb2YtdHlwZSgzKSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDEycztcbiAgICAtby1hbmltYXRpb24tZGVsYXk6IDEycztcbiAgICBhbmltYXRpb24tZGVsYXk6IDEycztcbiAgfVxuXG4gIC5pdGVtcy00IC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSg0KSxcbiAgLml0ZW1zLTQgLml0ZW06bnRoLW9mLXR5cGUoNCkge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAxOXM7XG4gICAgLW8tYW5pbWF0aW9uLWRlbGF5OiAxOXM7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAxOXM7XG4gIH1cblxuICBALXdlYmtpdC1rZXlmcmFtZXMgY29udHJvbEFuaW1hdGlvbi01IHtcbiAgICAwJSB7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gICAgfVxuXG4gICAgNS43JSwgMjAlIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgfVxuXG4gICAgMjUuNyUsIDEwMCUge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAgIH1cbiAgfVxuXG4gIEAtby1rZXlmcmFtZXMgY29udHJvbEFuaW1hdGlvbi01IHtcbiAgICAwJSB7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gICAgfVxuXG4gICAgNS43JSwgMjAlIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgfVxuXG4gICAgMjUuNyUsIDEwMCUge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAgIH1cbiAgfVxuXG4gIEBrZXlmcmFtZXMgY29udHJvbEFuaW1hdGlvbi01IHtcbiAgICAwJSB7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gICAgfVxuXG4gICAgNS43JSwgMjAlIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgfVxuXG4gICAgMjUuNyUsIDEwMCUge1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAgIH1cbiAgfVxuXG4gIEAtd2Via2l0LWtleWZyYW1lcyBnYWxsZXJ5QW5pbWF0aW9uLTUge1xuICAgIDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgNS43JSwgMjAlIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuXG4gICAgMjUuNyUsIDEwMCUge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG4gIH1cblxuICBALW8ta2V5ZnJhbWVzIGdhbGxlcnlBbmltYXRpb24tNSB7XG4gICAgMCUge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG5cbiAgICA1LjclLCAyMCUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG5cbiAgICAyNS43JSwgMTAwJSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbiAgfVxuXG4gIEBrZXlmcmFtZXMgZ2FsbGVyeUFuaW1hdGlvbi01IHtcbiAgICAwJSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cblxuICAgIDUuNyUsIDIwJSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cblxuICAgIDI1LjclLCAxMDAlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuICB9XG5cbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoMSk6dGFyZ2V0IH4gLml0ZW06bnRoLW9mLXR5cGUoMSkge1xuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICAuZ2FsbGVyeSAuY29udHJvbC1vcGVyYXRvcjpudGgtb2YtdHlwZSgyKTp0YXJnZXQgfiAuaXRlbTpudGgtb2YtdHlwZSgyKSB7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuXG4gIC5nYWxsZXJ5IC5jb250cm9sLW9wZXJhdG9yOm50aC1vZi10eXBlKDMpOnRhcmdldCB+IC5pdGVtOm50aC1vZi10eXBlKDMpIHtcbiAgICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5cbiAgLmdhbGxlcnkgLmNvbnRyb2wtb3BlcmF0b3I6bnRoLW9mLXR5cGUoNCk6dGFyZ2V0IH4gLml0ZW06bnRoLW9mLXR5cGUoNCkge1xuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICAuZ2FsbGVyeSAuY29udHJvbC1vcGVyYXRvcjpudGgtb2YtdHlwZSg1KTp0YXJnZXQgfiAuaXRlbTpudGgtb2YtdHlwZSg1KSB7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuXG4gIC5pdGVtcy01LmF1dG9wbGF5IC5jb250cm9sLWJ1dHRvbiB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IGNvbnRyb2xBbmltYXRpb24tNSAzNXMgaW5maW5pdGU7XG4gICAgLW8tYW5pbWF0aW9uOiBjb250cm9sQW5pbWF0aW9uLTUgMzVzIGluZmluaXRlO1xuICAgIGFuaW1hdGlvbjogY29udHJvbEFuaW1hdGlvbi01IDM1cyBpbmZpbml0ZTtcbiAgfVxuXG4gIC5pdGVtcy01LmF1dG9wbGF5IC5pdGVtIHtcbiAgICAtd2Via2l0LWFuaW1hdGlvbjogZ2FsbGVyeUFuaW1hdGlvbi01IDM1cyBpbmZpbml0ZTtcbiAgICAtby1hbmltYXRpb246IGdhbGxlcnlBbmltYXRpb24tNSAzNXMgaW5maW5pdGU7XG4gICAgYW5pbWF0aW9uOiBnYWxsZXJ5QW5pbWF0aW9uLTUgMzVzIGluZmluaXRlO1xuICB9XG5cbiAgLml0ZW1zLTUgLmNvbnRyb2wtYnV0dG9uOm50aC1vZi10eXBlKDEpLFxuICAuaXRlbXMtNSAuaXRlbTpudGgtb2YtdHlwZSgxKSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0ycztcbiAgICAtby1hbmltYXRpb24tZGVsYXk6IC0ycztcbiAgICBhbmltYXRpb24tZGVsYXk6IC0ycztcbiAgfVxuXG4gIC5pdGVtcy01IC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSgyKSxcbiAgLml0ZW1zLTUgLml0ZW06bnRoLW9mLXR5cGUoMikge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiA1cztcbiAgICAtby1hbmltYXRpb24tZGVsYXk6IDVzO1xuICAgIGFuaW1hdGlvbi1kZWxheTogNXM7XG4gIH1cblxuICAuaXRlbXMtNSAuY29udHJvbC1idXR0b246bnRoLW9mLXR5cGUoMyksXG4gIC5pdGVtcy01IC5pdGVtOm50aC1vZi10eXBlKDMpIHtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogMTJzO1xuICAgIC1vLWFuaW1hdGlvbi1kZWxheTogMTJzO1xuICAgIGFuaW1hdGlvbi1kZWxheTogMTJzO1xuICB9XG5cbiAgLml0ZW1zLTUgLmNvbnRyb2wtYnV0dG9uOm50aC1vZi10eXBlKDQpLFxuICAuaXRlbXMtNSAuaXRlbTpudGgtb2YtdHlwZSg0KSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDE5cztcbiAgICAtby1hbmltYXRpb24tZGVsYXk6IDE5cztcbiAgICBhbmltYXRpb24tZGVsYXk6IDE5cztcbiAgfVxuXG4gIC5pdGVtcy01IC5jb250cm9sLWJ1dHRvbjpudGgtb2YtdHlwZSg1KSxcbiAgLml0ZW1zLTUgLml0ZW06bnRoLW9mLXR5cGUoNSkge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAyNnM7XG4gICAgLW8tYW5pbWF0aW9uLWRlbGF5OiAyNnM7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAyNnM7XG4gIH1cblxuICAuZ2FsbGVyeSAuY29udHJvbC1idXR0b24ge1xuICAgIGNvbG9yOiAjY2NjO1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gIH1cblxuICAuZ2FsbGVyeSAuY29udHJvbC1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IHVybCguLi9pbWcvRWxsaXBzZS0yLWNvcHktMi5wbmcpIG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgMTAlO1xuICB9XG5cbiAgLypcbiAgXHRUaGVtZSBjb250cm9scyBob3cgZXZlcnl0aGluZyBsb29rcyBpbiBHYWxsZXJ5IENTUy5cbiAgKi9cblxuICAuZ2FsbGVyeSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG5cbiAgLmdhbGxlcnkgLml0ZW0ge1xuICAgIGhlaWdodDogYXV0bztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBhZGRpbmctdG9wOiA0OHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIC5xdW90ZSB7XG4gICAgICBAaW5jbHVkZSAgZm9udC1zaXplKDE3cHgpO1xuICAgICAgY29sb3I6ICMzYTQyNDY7XG4gICAgICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4gICAgICBmb250LXNpemU6IDE3cHg7XG4gICAgICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgbWFyZ2luOiAxOXB4IDkzcHggMCA4MXB4O1xuICAgIH1cblxuICAgIC5hdXRob3Ige1xuICAgICAgQGluY2x1ZGUgIGZvbnQtc2l6ZSgxNXB4KTtcbiAgICAgIGNvbG9yOiAjMTU5OWE3O1xuICAgICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zaXplOiAxNXB4O1xuICAgICAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgbWFyZ2luOiAxMHB4IDAgMzJweCAwO1xuICAgIH1cbiAgfVxuXG4gIC5nYWxsZXJ5IC5jb250cm9scyB7XG4gICAgYm90dG9tOiAwO1xuICAgIGhlaWdodDogMjBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLmdhbGxlcnkgLmNvbnRyb2wtYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9jb250cm9sLWJ1dHRvbi5wbmcnKSBuby1yZXBlYXQ7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtc2l6ZTogM2VtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cblxuICBmaWd1cmUge1xuICAgIG1hcmdpbjogMDtcbiAgfVxufVxuXG4vKlxuICBFTkQgQ0FST1VTRUwtU0VDVElPTlxuKi8iLCIvLy8gRm9udCBzaXplIGF0dHJpYnV0ZSBhcHBsaWVkIHRvIGA8aHRtbD5gIGFuZCBgPGJvZHk+YC4gV2UgdXNlIDEwMCUgYnkgZGVmYXVsdCBzbyB0aGUgdmFsdWUgaXMgaW5oZXJpdGVkIGZyb20gdGhlIHVzZXIncyBicm93c2VyIHNldHRpbmdzLlxuLy8vIEB0eXBlIE51bWJlclxuJGdsb2JhbC1mb250LXNpemU6IDEwMCUgIWRlZmF1bHQ7XG5cbi8vLyBHbG9iYWwgd2lkdGggb2YgeW91ciBzaXRlLiBVc2VkIGJ5IHRoZSBncmlkIHRvIGRldGVybWluZSByb3cgd2lkdGguXG4vLy8gQHR5cGUgTnVtYmVyXG4kZ2xvYmFsLXdpZHRoOiByZW0tY2FsYygxMjAwKSAhZGVmYXVsdDtcblxuLy8vIERlZmF1bHQgbGluZSBoZWlnaHQgZm9yIGFsbCB0eXBlLiBgJGdsb2JhbC1saW5laGVpZ2h0YCBpcyAyNHB4IHdoaWxlIGAkZ2xvYmFsLWZvbnQtc2l6ZWAgaXMgMTZweFxuLy8vIEB0eXBlIE51bWJlclxuJGdsb2JhbC1saW5laGVpZ2h0OiAxICFkZWZhdWx0O1xuXG4vLy8gQ29sb3JzIHVzZWQgZm9yIGJ1dHRvbnMsIGNhbGxvdXRzLCBsaW5rcywgZXRjLiBUaGVyZSBtdXN0IGFsd2F5cyBiZSBhIGNvbG9yIGNhbGxlZCBgcHJpbWFyeWAuXG4vLy8gQHR5cGUgTWFwXG4kZm91bmRhdGlvbi1wYWxldHRlOiAoXG4gIHByaW1hcnk6ICMxNzc5YmEsXG4gIHNlY29uZGFyeTogIzc2NzY3NixcbiAgc3VjY2VzczogIzNhZGI3NixcbiAgd2FybmluZzogI2ZmYWUwMCxcbiAgYWxlcnQ6ICNjYzRiMzcsXG4pICFkZWZhdWx0O1xuXG4vLy8gQ29sb3IgdXNlZCBmb3IgbGlnaHQgZ3JheSBVSSBpdGVtcy5cbi8vLyBAdHlwZSBDb2xvclxuJGxpZ2h0LWdyYXk6ICNlNmU2ZTYgIWRlZmF1bHQ7XG5cbi8vLyBDb2xvciB1c2VkIGZvciBtZWRpdW0gZ3JheSBVSSBpdGVtcy5cbi8vLyBAdHlwZSBDb2xvclxuJG1lZGl1bS1ncmF5OiAjY2FjYWNhICFkZWZhdWx0O1xuXG4vLy8gQ29sb3IgdXNlZCBmb3IgZGFyayBncmF5IFVJIGl0ZW1zLlxuLy8vIEB0eXBlIENvbG9yXG4kZGFyay1ncmF5OiAjOGE4YThhICFkZWZhdWx0O1xuXG4vLy8gQ29sb3IgdXNlZCBmb3IgYmxhY2sgdWkgaXRlbXMuXG4vLy8gQHR5cGUgQ29sb3JcbiRibGFjazogIzBhMGEwYSAhZGVmYXVsdDtcblxuLy8vIENvbG9yIHVzZWQgZm9yIHdoaXRlIHVpIGl0ZW1zLlxuLy8vIEB0eXBlIENvbG9yXG4kd2hpdGU6ICNmZWZlZmUgIWRlZmF1bHQ7XG5cbi8vLyBCYWNrZ3JvdW5kIGNvbG9yIG9mIHRoZSBib2R5LlxuLy8vIEB0eXBlIENvbG9yXG4kYm9keS1iYWNrZ3JvdW5kOiAkd2hpdGUgIWRlZmF1bHQ7XG5cbi8vLyBUZXh0IGNvbG9yIG9mIHRoZSBib2R5LlxuLy8vIEB0eXBlIENvbG9yXG4kYm9keS1mb250LWNvbG9yOiAkYmxhY2sgIWRlZmF1bHQ7XG5cbi8vLyBGb250IHN0YWNrIG9mIHRoZSBib2R5LlxuLy8vIEB0eXBlIExpc3RcbiRib2R5LWZvbnQtZmFtaWx5OiAnUm9ib3RvJywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZiAhZGVmYXVsdDtcblxuLy8vIFNldCB0byBgdHJ1ZWAgdG8gZW5hYmxlIGFudGlhbGlhc2VkIHR5cGUsIHVzaW5nIHRoZSBgLXdlYmtpdC1mb250LXNtb290aGluZ2AgYW5kIGAtbW96LW9zeC1mb250LXNtb290aGluZ2AgQ1NTIHByb3BlcnRpZXMuXG4vLy8gQHR5cGUgQm9vbGVhblxuJGJvZHktYW50aWFsaWFzZWQ6IHRydWUgIWRlZmF1bHQ7XG5cbi8vLyBHbG9iYWwgdmFsdWUgdXNlZCBmb3IgbWFyZ2luIG9uIGNvbXBvbmVudHMuXG4vLy8gQHR5cGUgTnVtYmVyXG4kZ2xvYmFsLW1hcmdpbjogMXJlbSAhZGVmYXVsdDtcblxuLy8vIEdsb2JhbCB2YWx1ZSB1c2VkIGZvciBwYWRkaW5nIG9uIGNvbXBvbmVudHMuXG4vLy8gQHR5cGUgTnVtYmVyXG4kZ2xvYmFsLXBhZGRpbmc6IDFyZW0gIWRlZmF1bHQ7XG5cbi8vLyBHbG9iYWwgZm9udCB3ZWlnaHQgdXNlZCBmb3Igbm9ybWFsIHR5cGUuXG4vLy8gQHR5cGUgS2V5d29yZCB8IE51bWJlclxuJGdsb2JhbC13ZWlnaHQtbm9ybWFsOiBub3JtYWwgIWRlZmF1bHQ7XG5cbi8vLyBHbG9iYWwgZm9udCB3ZWlnaHQgdXNlZCBmb3IgYm9sZCB0eXBlLlxuLy8vIEB0eXBlIEtleXdvcmQgfCBOdW1iZXJcbiRnbG9iYWwtd2VpZ2h0LWJvbGQ6IGJvbGQgIWRlZmF1bHQ7XG5cbi8vLyBHbG9iYWwgdmFsdWUgdXNlZCBmb3IgYWxsIGVsZW1lbnRzIHRoYXQgaGF2ZSBhIGJvcmRlciByYWRpdXMuXG4vLy8gQHR5cGUgTnVtYmVyXG4kZ2xvYmFsLXJhZGl1czogMCAhZGVmYXVsdDtcblxuLy8vIFNldHMgdGhlIHRleHQgZGlyZWN0aW9uIG9mIHRoZSBDU1MuIENhbiBiZSBlaXRoZXIgYGx0cmAgb3IgYHJ0bGAuXG4vLy8gQHR5cGUgS2V5d29yZFxuJGdsb2JhbC10ZXh0LWRpcmVjdGlvbjogbHRyICFkZWZhdWx0O1xuXG4vLy8gRW5hYmxlcyBmbGV4Ym94IGZvciBjb21wb25lbnRzIHRoYXQgc3VwcG9ydCBpdC5cbi8vLyBAdHlwZSBCb29sZWFuXG4kZ2xvYmFsLWZsZXhib3g6IGZhbHNlICFkZWZhdWx0O1xuXG5AaWYgbm90IG1hcC1oYXMta2V5KCRmb3VuZGF0aW9uLXBhbGV0dGUsIHByaW1hcnkpIHtcbiAgQGVycm9yICdJbiAkZm91bmRhdGlvbi1wYWxldHRlLCB5b3UgbXVzdCBoYXZlIGEgY29sb3IgbmFtZWQgXCJwcmltYXJ5XCIuJztcbn1cblxuLy8gSW50ZXJuYWwgdmFyaWFibGVzIHVzZWQgZm9yIHRleHQgZGlyZWN0aW9uXG4kZ2xvYmFsLWxlZnQ6IGlmKCRnbG9iYWwtdGV4dC1kaXJlY3Rpb24gPT0gcnRsLCByaWdodCwgbGVmdCk7XG4kZ2xvYmFsLXJpZ2h0OiBpZigkZ2xvYmFsLXRleHQtZGlyZWN0aW9uID09IHJ0bCwgbGVmdCwgcmlnaHQpO1xuXG4vLyBJbnRlcm5hbCB2YXJpYWJsZXMgdXNlZCBmb3IgY29sb3JzXG4kcHJpbWFyeS1jb2xvcjogZ2V0LWNvbG9yKHByaW1hcnkpO1xuJHNlY29uZGFyeS1jb2xvcjogZ2V0LWNvbG9yKHNlY29uZGFyeSk7XG4kc3VjY2Vzcy1jb2xvcjogZ2V0LWNvbG9yKHN1Y2Nlc3MpO1xuJHdhcm5pbmctY29sb3I6IGdldC1jb2xvcih3YXJuaW5nKTtcbiRhbGVydC1jb2xvcjogZ2V0LWNvbG9yKGFsZXJ0KTtcblxuXG4gIGh0bWwge1xuICAgIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDsgLyog0J3Rg9C20L3QviDQtNC70Y8gRmlyZWZveCAqLyAgICBcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qINCd0YPQttC90L4g0LTQu9GPINC80L7QsdC40LvRjNC90L7Qs9C+IFdlYktpdCAqL1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgZm9udC1zaXplOiAkZ2xvYmFsLWZvbnQtc2l6ZTtcbiAgfVxuXG4gIC8vIFNldCBib3gtc2l6aW5nIGdsb2JhbGx5IHRvIGhhbmRsZSBwYWRkaW5nIGFuZCBib3JkZXIgd2lkdGhzXG4gICosXG4gICo6OmJlZm9yZSxcbiAgKjo6YWZ0ZXIge1xuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gIH1cblxuICAvLyBEZWZhdWx0IGJvZHkgc3R5bGVzXG4gIGJvZHkge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJhY2tncm91bmQ6ICRib2R5LWJhY2tncm91bmQgdXJsKCcuLi9pbWcvYmFja2dyb3VuZC5wbmcnKSBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xuICAgIGZvbnQtZmFtaWx5OiAkYm9keS1mb250LWZhbWlseTtcbiAgICBmb250LXdlaWdodDogJGdsb2JhbC13ZWlnaHQtbm9ybWFsO1xuICAgIGxpbmUtaGVpZ2h0OiAkZ2xvYmFsLWxpbmVoZWlnaHQ7XG4gICAgY29sb3I6ICRib2R5LWZvbnQtY29sb3I7XG4gIH1cblxuICBpbWcge1xuICAgIC8vIEdldCByaWQgb2YgZ2FwIHVuZGVyIGltYWdlcyBieSBtYWtpbmcgdGhlbSBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IGJ5IGRlZmF1bHRcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcblxuICAgIC8vIEdyaWQgZGVmYXVsdHMgdG8gZ2V0IGltYWdlcyBhbmQgZW1iZWRzIHRvIHdvcmsgcHJvcGVybHlcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7XG4gIH1cblxuICAvLyBNYWtlIHN1cmUgdGV4dGFyZWEgdGFrZXMgb24gaGVpZ2h0IGF1dG9tYXRpY2FsbHlcbiAgdGV4dGFyZWEge1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtaW4taGVpZ2h0OiA1MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuICB9XG5cbiAgLy8gTWFrZSBzZWxlY3QgZWxlbWVudHMgYXJlIDEwMCUgd2lkdGggYnkgZGVmYXVsdFxuICBzZWxlY3Qge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuICB9XG5cbiAgLy8gU3R5bGVzIEdvb2dsZSBNYXBzIGFuZCBNYXBRdWVzdCBlbWJlZHMgcHJvcGVybHlcbiAgLy8gc2Fzcy1saW50OmRpc2FibGUtbGluZSBuby1pZHNcbiAgLm1hcF9jYW52YXMsXG4gIC5tcWEtZGlzcGxheSB7XG5cbiAgICBpbWcsXG4gICAgZW1iZWQsXG4gICAgb2JqZWN0IHtcbiAgICAgIG1heC13aWR0aDogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cblxuICB9XG5cbiAgLy8gUmVzZXQgPGJ1dHRvbj4gc3R5bGVzIGNyZWF0ZWQgYnkgbW9zdCBicm93c2Vyc1xuICBidXR0b24ge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICBib3JkZXI6IDA7XG4gICAgYm9yZGVyLXJhZGl1czogJGdsb2JhbC1yYWRpdXM7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gIH1cblxuICAvLyBJbnRlcm5hbCBjbGFzc2VzIHRvIHNob3cvaGlkZSBlbGVtZW50cyBpbiBKYXZhU2NyaXB0XG4gIC5pcy12aXNpYmxlIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICB9XG5cbiAgLmlzLWhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLmNvbnRhaW5lciB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWF4LXdpZHRoOiA4MjRweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA0ODFweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICBtYXgtd2lkdGg6IDc0OHB4O1xuICAgIH1cbiAgfVxuIl19 */
